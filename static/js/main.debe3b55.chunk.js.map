{"version":3,"sources":["components/Posenet/index.module.css","components/Posenet/helpers/SliderScrubber/index.module.css","logo.svg","components/Posenet/helpers/color.js","components/Posenet/utils.js","components/Posenet/helpers/SliderScrubber/index.js","components/Posenet/helpers/download.js","components/Posenet/helpers/share.js","lib/constants.js","components/Posenet/index.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["module","exports","loading","posenet","download","button","contextualOptions","contextualOptionsDiv","replayDiv","scrubberDiv","scrubberInnerDiv","sliderScrubber","__webpack_require__","p","colourNameToHex","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","hex2rgb","hex","result","exec","parseInt","getColorOpacityRangeHex","steps","arguments","length","undefined","rgbIn","faded","max","min","Object","toConsumableArray","Array","map","v","i","amt","makeRange","rgb","color1","color2","factor","slice","Math","round","_interpolateColor","toString","reverse","isMobile","test","navigator","userAgent","drawKeypoints","keypoints","minConfidence","skeletonColor","ctx","scale","forEach","keypoint","score","_keypoint$position","position","y","x","beginPath","arc","PI","fillStyle","fill","toTuple","_ref","drawSkeleton","color","lineWidth","_ref2","_ref3","_ref4","slicedToArray","ay","ax","_ref5","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSegment","SliderScrubber","state","value","onChangeComplete","_this","bind","assertThisInitialized","onChange","this","props","setState","range","react_default","a","createElement","className","styles","js_default","draggableTrack","maxValue","minValue","Component","content","fileName","contentType","document","file","Blob","type","href","URL","createObjectURL","click","template_params","subject","message","from","sendEmail","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","abrupt","Promise","resolve","emailjs","then","response","console","log","status","text","err","stop","_x","apply","COLORS","PoseNetComponent","error_messages","stream","trace","frames","camera","traceVideo","getCanvas","elem","canvas","getVideo","video","prevProps","prevState","frontCamera","stopCamera","setupCamera","startCamera","detectPose","errorMessages","getPoseRecords","getVideoRecords","poses","record","concat","blob","cam","srcObject","getTracks","t","mediaDevices","getUserMedia","e1","videoWidth","videoHeight","mobile","width","height","audio","facingMode","exact","onloadedmetadata","play","_this$props2","getContext","poseDetectionFrame","_this2","_this$props3","algorithm","imageScaleFactor","forceFlipHorizontal","outputStride","minPoseConfidence","maxPoseDetections","minPartConfidence","nmsRadius","showVideo","showPoints","showSkeleton","skeletonLineWidth","net","flipped","poseDetectionFrameInner","_callee3","pose","_context3","t0","estimateSinglePose","sent","push","estimateMultiplePoses","clearRect","save","translate","drawImage","restore","recordVideo","tracePose","toBlob","requestAnimationFrame","mobileNetArchitecture","e2","loadingText","style","fontSize","playsInline","ref","defaultProps","PoseNetReplay","_Component2","_getPrototypeOf3","_this3","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","loadedPoseRecords","loadedPoseVideo","loadData","handleFileRead","inherits","createClass","key","_this$props4","poseDrawFrame","_this$props5","_this$props6","poseRecords","poseVideo","_callee5","drawPoses","clrRange","clr","clrList","frame","url","_context5","src","onload","revokeObjectURL","drawPose","e","JSON","parse","fileReader","FileReader","onloadend","readAsText","target","files","_this4","_this$props7","additional_buttons","maxWidth","margin","display","onClick","stringify","_callee6","_context6","alert","padding","name","accept","backgroundColor","overflow","SliderScrubber_SliderScrubber","additionalOptions","PoseNetMatch","_Component3","_getPrototypeOf4","_this5","_len3","_key3","h","w","_this$state","_this6","_this$props8","_ref6","_callee7","_context7","_ref7","_onCameraStart","_callee8","track","_context8","getVideoTracks","getSettings","setDims","onStream","_x3","window","innerWidth","innerHeight","build_default","App","recording","videoRecording","replay","front","multipose","mode","dims","hideInfo","onToggle","onToggleFrontCamera","onToggleVideoFeed","onTracePose","onTraceVideo","onToggleMultiPose","onStartRecord","onStopRecord","setTimeout","MainContent","Fragment","contentDiv","Posenet_PoseNetReplay","Posenet_PoseNetComponent","Posenet_PoseNetMatch","RecordToggles","toggles","justifyContent","toggleButton","toggleButtonRight","InfoWarning","warningDiv","warning","isRecordingEmpty","app","appContent","flexDirection","alignItems","modeButtons","btnContainer","btnLeft","btnRight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister","btn"],"mappings":"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","file":"static/js/main.debe3b55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Posenet_loading__3_Gk5\",\"posenet\":\"Posenet_posenet__3mPFo\",\"download\":\"Posenet_download__3Ba3B\",\"button\":\"Posenet_button__SsefG\",\"contextualOptions\":\"Posenet_contextualOptions__3IWp1\",\"contextualOptionsDiv\":\"Posenet_contextualOptionsDiv__3A6kY\",\"replayDiv\":\"Posenet_replayDiv__3rekZ\",\"scrubberDiv\":\"Posenet_scrubberDiv__1y8W_\",\"scrubberInnerDiv\":\"Posenet_scrubberInnerDiv__3ywqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderScrubber\":\"SliderScrubber_sliderScrubber__2PdqC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function colourNameToHex(colour) {\n  var colours = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgrey: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370d8\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#d87093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  };\n\n  if (typeof colours[colour.toLowerCase()] != \"undefined\")\n    return colours[colour.toLowerCase()];\n\n  return false;\n}\n\nexport function decimalToHexString(number) {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n\n  return number.toString(16).toUpperCase();\n}\n\nconst hex2rgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgb2hex = function(rgb) {\n  return (\n    \"#\" +\n    ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  );\n};\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nconst _interpolateColor = function(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5;\n  }\n  let result = color1.slice();\n  for (var i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n};\n\nconst lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end;\n};\n\nconst makeRange = (steps, max = 1, min = 0) => {\n  return [...Array(steps)].map((v, i) => lerp(min, max, i / steps));\n};\n\nexport const getColorOpacityRangeHex = (steps = 20, hex) => {\n  const rgbIn = hex2rgb(hex);\n  const faded = hex2rgb(\"#333333\");\n\n  const interpolated = makeRange(steps).map(v =>\n    rgb2hex(_interpolateColor(rgbIn, faded, v))\n  );\n\n  return interpolated.reverse();\n};\n","import * as posenet from \"@tensorflow-models/posenet\";\n\nexport const isAndroid = () => /Android/i.test(navigator.userAgent);\n\nexport const isiOS = () => /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\nexport const isMobile = () => isAndroid() || isiOS();\n\nexport const drawKeypoints = (\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  ctx,\n  scale = 1\n) => {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      ctx.beginPath();\n      ctx.arc(x * scale, y * scale, 3, 0, 2 * Math.PI);\n      ctx.fillStyle = skeletonColor;\n      ctx.fill();\n    }\n  });\n};\n\nconst toTuple = ({ y, x }) => [y, x];\n\nconst drawSegment = ([ay, ax], [by, bx], color, lineWidth, scale, ctx) => {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawSkeleton = (\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  ctx,\n  scale = 1\n) => {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  );\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      ctx\n    );\n  });\n};\n\n// draw3dModel\n// exact same thing\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\n\n// styles\nimport styles from \"./index.module.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport \"./index.css\";\n\nexport default class SliderScrubber extends Component {\n  state = {\n    value: {\n      min: 10,\n      max: 50\n    }\n  };\n  onChangeComplete = this.onChangeComplete.bind(this);\n  onChange = this.onChange.bind(this);\n\n  onChangeComplete(v) {\n    if (this.props.onChangeComplete) {\n      this.props.onChangeComplete(v);\n    }\n  }\n\n  onChange(v) {\n    this.setState({ value: v });\n\n    if (this.props.onChange) {\n      this.props.onChange(v);\n    }\n  }\n\n  render() {\n    const { range } = this.props;\n\n    const min = range ? range.min || 0 : 0;\n    const max = range ? range.max || range || 100 : 100;\n    const clampedValue = {\n      min: Math.min(Math.max(this.state.value.min, min), max - 20),\n      max: Math.min(this.state.value.max, max)\n    };\n\n    return (\n      <div className={styles.sliderScrubber}>\n        <InputRange\n          draggableTrack\n          maxValue={max}\n          minValue={min}\n          onChange={this.onChange}\n          onChangeComplete={this.onChangeComplete}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nconst download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport default download;\n","import * as emailjs from \"emailjs-com\";\n\nconst TEMPLATE_ID = \"posenet\";\nconst SERVICE_ID = \"default_service\";\nconst USER_ID = \"user_ljTfIJFviZGfuGmui594C\";\n\nconst template_params = {\n  subject: \"subject_value\",\n  message: \"message_value\",\n  from: \"from_value\"\n};\n\nexport const sendEmail = async ({ subject, message, from }) => {\n  const data = { subject, message, from };\n\n  return new Promise(resolve => {\n    emailjs\n      .send(SERVICE_ID, TEMPLATE_ID, data || template_params, USER_ID)\n      .then(\n        response => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          resolve(true);\n        },\n        err => {\n          console.log(\"FAILED...\", err);\n          resolve(false);\n        }\n      );\n  });\n};\n\nexport const sendEmailWithAttachment = async ({ event }) => {\n  console.log(event);\n};\n","export const DEBUG = false;\nexport const COLORS = {\n  main: \"#5FD49B\",\n  secondary: \"#FF8547\",\n  highlight: \"#BAFFFF\"\n};\n","// ref: https://github.com/jscriptcoder/tfjs-posenet/blob/master/src/PoseNet/index.jsx\n\n// main imports\nimport React, { Component } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Camera from \"react-html5-camera-photo\";\nimport ReactJson from \"react-json-tree\";\n\n// styles\nimport styles from \"./index.module.css\";\n// google theme\nimport { googleTheme } from \"./helpers/themes\";\nimport { colourNameToHex, getColorOpacityRangeHex } from \"./helpers/color\";\n\n// components\nimport { isMobile, drawKeypoints, drawSkeleton } from \"./utils\";\nimport Scrubber from \"./helpers/SliderScrubber\";\nimport download from \"./helpers/download\";\nimport { sendEmail } from \"./helpers/share\";\n\n// constants\nimport { DEBUG } from \"../../lib/constants\";\n\nexport default class PoseNetComponent extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 10,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: []\n  };\n  camera = undefined;\n  traceVideo = this.traceVideo.bind(this);\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.frontCamera !== this.props.frontCamera) {\n        // stop existing camera\n        this.stopCamera();\n        // setup and start\n        this.camera = await this.setupCamera();\n        this.startCamera();\n        // detect pose\n        this.detectPose();\n      }\n    }\n  }\n\n  errorMessages() {\n    // pipe out error messages\n    if (this.props.errorMessages) {\n      this.props.errorMessages(this.state.error_messages);\n    }\n  }\n\n  // the traced sequence\n  getPoseRecords() {\n    if (this.props.getPoseRecords) {\n      this.props.getPoseRecords(this.state.trace);\n    }\n  }\n\n  getVideoRecords() {\n    if (this.props.getVideoRecords) {\n      this.props.getVideoRecords(this.state.frames);\n    }\n  }\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  stopCamera() {\n    const cam = this.camera;\n    if (cam) {\n      const stream = cam.srcObject;\n      const tracks = stream.getTracks();\n\n      // stop all tracks\n      tracks.map(t => t.stop());\n      this.camera = undefined;\n      this.setState({ loading: true, stop: true });\n    }\n  }\n\n  startCamera() {\n    const cam = this.camera;\n    if (cam) {\n      this.setState({ loading: false, stop: false });\n    } else {\n      this.stopCamera();\n    }\n  }\n\n  async setupCamera() {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const { videoWidth, videoHeight } = this.props;\n    const video = this.video;\n    const mobile = isMobile();\n    const frontCamera = this.props.frontCamera;\n\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: frontCamera ? \"user\" : { exact: \"environment\" },\n        width: mobile ? void 0 : videoWidth,\n        height: mobile ? void 0 : videoHeight\n      }\n    });\n\n    video.srcObject = stream;\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        // Once the video metadata is ready, we can start streaming video\n        video.play();\n        resolve(video); // promise returns video\n      };\n    });\n  }\n\n  detectPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            console.log(\"recording frame and video!\");\n          } else {\n            console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async componentDidMount() {\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n    //console.log(\"loaded mobilenet\");\n    //console.log(this.net);\n\n    try {\n      this.camera = await this.setupCamera();\n    } catch (e) {\n      const e2 =\n        \"This browser does not support video capture, or this device does not have a camera\";\n      this.setState({ error_messages: e2 });\n      throw e2;\n    } finally {\n      this.setState({ loading: false });\n    }\n\n    this.detectPose();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounts!\");\n    this.stopCamera();\n    this.setState({ stop: true });\n  }\n\n  render() {\n    const loading = this.state.loading ? (\n      <div className={styles.loading}>\n        <code>{this.props.loadingText}</code>\n        <br />\n        <code style={{ color: \"red\", fontSize: 12 }}>\n          {this.state.error_messages}\n        </code>\n      </div>\n    ) : (\n      \"\"\n    );\n\n    this.errorMessages();\n\n    return (\n      <div className={styles.posenet}>\n        {loading}\n        <video playsInline ref={this.getVideo} />\n        {/* <Webcam ref={this.getVideo} /> */}\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n\nexport class PoseNetReplay extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    additionalOptions: true\n  };\n  state = {\n    loadedPoseRecords: [],\n    loadedPoseVideo: []\n  };\n\n  fileReader;\n  onChange = this.onChange.bind(this);\n  loadData = this.loadData.bind(this);\n  handleFileRead = this.handleFileRead.bind(this);\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  drawPose(range) {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDrawFrame(ctx, range);\n  }\n\n  poseDrawFrame(ctx, range) {\n    const {\n      minPoseConfidence,\n      minPartConfidence,\n      videoWidth,\n      videoHeight,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      showVideo,\n      flipped\n    } = this.props;\n\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const poseDetectionFrameInner = async () => {\n      const drawPoses = () => {\n        // For each pose (i.e. person) detected in an image, loop through the poses\n        // and draw the resulting skeleton and keypoints if over certain confidence\n        // scores\n        poses.map(({ score, keypoints }, i) => {\n          if (score >= minPoseConfidence) {\n            if (showPoints) {\n              drawKeypoints(keypoints, minPartConfidence, clrList[i], ctx);\n            }\n            if (showSkeleton) {\n              drawSkeleton(\n                keypoints,\n                minPartConfidence,\n                clrList[i],\n                skeletonLineWidth,\n                ctx\n              );\n            }\n          }\n        });\n      };\n\n      let poses = [];\n      poses = range ? poseRecords.slice(range.min, range.max) : poseRecords;\n\n      let video = [];\n\n      if (range) {\n        poses = poseRecords.slice(range.min, range.max);\n\n        if (poseVideo) {\n          video = poseVideo.slice(range.min, range.max);\n        }\n      } else {\n        poses = poseRecords;\n\n        if (poseVideo) {\n          video = poseVideo;\n        }\n      }\n      video = video[video.length - 1];\n\n      const clrRange = poses.length;\n      let clr = colourNameToHex(skeletonColor) || \"#cccccc\";\n\n      const clrList = getColorOpacityRangeHex(clrRange, clr);\n      clrList.reverse()[0] = \"#fff\";\n      clrList.reverse();\n\n      if (showVideo && poseVideo.length > 1 && poses.length > 1) {\n        // turn blob into data\n        const frame = document.createElement(\"img\");\n        const url = URL.createObjectURL(video);\n\n        frame.src = url;\n\n        // temp draw\n        // frame.id = \"frame\";\n        // frame.height = 300;\n        // document.getElementById(\"frame\").replaceWith(frame);\n\n        frame.onload = () => {\n          // why? : https://stackoverflow.com/questions/12387310/html5-drawimage-works-in-firefox-not-chrome\n\n          ctx.clearRect(0, 0, videoWidth, videoHeight);\n          // draw\n          ctx.save();\n          if (flipped) {\n            // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n            ctx.scale(-1, 1);\n            ctx.translate(-videoWidth, 0);\n          }\n          ctx.drawImage(frame, 0, 0, videoWidth, videoHeight);\n          ctx.restore();\n\n          drawPoses();\n\n          URL.revokeObjectURL(url);\n        };\n      } else {\n        // no video\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n        drawPoses();\n      }\n    };\n\n    requestAnimationFrame(poseDetectionFrameInner);\n  }\n\n  componentDidMount() {\n    this.drawPose();\n  }\n\n  onChange(range) {\n    this.drawPose(range);\n  }\n\n  handleFileRead(e) {\n    const content = JSON.parse(this.fileReader.result);\n    this.setState({\n      loadedPoseRecords: content.poseRecords || content || [], // content is for backward compatibility\n      loadedPoseVideo: content.poseVideo || []\n    });\n  }\n\n  loadData(e) {\n    this.fileReader = new FileReader();\n    this.fileReader.onloadend = this.handleFileRead;\n\n    // run it\n    this.fileReader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const additional_buttons = (\n      <div className={styles.contextualOptionsDiv}>\n        <div className={styles.contextualOptions}>\n          {poseRecords.length > 1 ? (\n            <div>\n              <div\n                className={styles.download}\n                style={{\n                  maxWidth: 800,\n\n                  margin: \"0 auto\",\n                  display: \"flex\"\n                }}\n              >\n                <button\n                  className={styles.button}\n                  onClick={() =>\n                    download(\n                      JSON.stringify({\n                        poseRecords: poseRecords,\n                        poseVideo: []\n                      }),\n                      \"temp.json\"\n                    )\n                  }\n                >\n                  download data\n                </button>\n\n                <button\n                  className={styles.button}\n                  onClick={async () => {\n                    await sendEmail({\n                      subject: \"GWARA GWARA!\",\n                      message: \"I challenge you! GAWRRR!\",\n                      from: \"Rahmat Hidayat\"\n                    });\n                    alert(\"challenge sent!\");\n                  }}\n                >\n                  send challenge\n                </button>\n                <button\n                  className={styles.button}\n                  onClick={() => {\n                    console.log(\"clearing records!\");\n\n                    return this.setState({\n                      loadedPoseRecords: [],\n                      loadedPoseVideo: []\n                    });\n                  }}\n                >\n                  clear data\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              className={styles.download}\n              style={{ maxWidth: 800, padding: \"10px 0\", margin: \"0 auto\" }}\n            >\n              <input\n                type=\"file\"\n                name=\"pose records upload\"\n                accept=\".json\"\n                onChange={this.loadData}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <div className={styles.replayDiv}>\n        <div\n          style={{\n            backgroundColor: \"#050517\",\n            maxWidth: 800,\n            overflow: \"hidden\",\n            height: \"100vh\"\n          }}\n        >\n          <div>\n            <canvas ref={this.getCanvas} />\n          </div>\n        </div>\n\n        <div className={styles.scrubberDiv}>\n          <div className={styles.scrubberInnerDiv}>\n            <Scrubber onChange={this.onChange} range={poseRecords.length} />\n          </div>\n        </div>\n\n        {/* temporarily show image for debug */}\n        {/* <div style={{ height: 300 }}>\n          <div id=\"frame\" />\n        </div> */}\n        {this.props.additionalOptions ? additional_buttons : \"\"}\n\n        {DEBUG ? (\n          <div\n            style={{\n              height: \"100%\",\n              maxWidth: 800,\n              margin: \"3rem auto\",\n              textAlign: \"left\",\n              border: \"1px dashed lightgrey\",\n              padding: \"0 10px\"\n            }}\n          >\n            <ReactJson data={poseRecords} theme={googleTheme} />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport class PoseNetMatch extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: [],\n    height: 0,\n    width: 0\n  };\n  traceVideo = this.traceVideo.bind(this);\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  onStream(v) {\n    console.log(\"streaming data\");\n    console.log(v);\n  }\n\n  setDims(h, w) {\n    this.setState({ height: h, width: w });\n  }\n\n  detectPose() {\n    const { width, height } = this.state;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = width;\n    canvas.height = height;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            //console.log(\"recording frame and video!\");\n          } else {\n            //console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async onCameraStart(stream) {\n    const track = stream.getVideoTracks()[0].getSettings();\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n\n    this.setDims(track.height, track.width);\n\n    this.onStream(stream);\n    this.detectPose();\n  }\n\n  // async componentDidMount() {\n  //   console.log(\"loaded mobilenet\");\n  //   console.log(this.net);\n  // }\n\n  render() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return (\n      <div>\n        <p>match</p>\n        <p>width: {width}</p>\n        <p>height: {height}</p>\n\n        <Camera\n\n        // onCameraStart={stream => {\n        //   this.onCameraStart(stream);\n        // }}\n        />\n\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n","// main imports\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n\n// styles\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\n\n// components\nimport PoseNet, { PoseNetReplay, PoseNetMatch } from \"./components/Posenet\";\n\n// constants\nimport { COLORS } from \"./lib/constants\";\n\nconst MAX_WIDTH = 400;\n\nclass App extends Component {\n  state = {\n    recording: [],\n    videoRecording: [],\n    replay: false,\n    front: true,\n    video: true,\n    multipose: false,\n    stop: false,\n    mode: \"replay\",\n    dims: {},\n    hideInfo: false\n  };\n  onToggle = this.onToggle.bind(this);\n  onToggleFrontCamera = this.onToggleFrontCamera.bind(this);\n  onToggleVideoFeed = this.onToggleVideoFeed.bind(this);\n  onTracePose = this.onTracePose.bind(this);\n  onTraceVideo = this.onTraceVideo.bind(this);\n  onToggleMultiPose = this.onToggleMultiPose.bind(this);\n  onStartRecord = this.onStartRecord.bind(this);\n  onStopRecord = this.onStopRecord.bind(this);\n\n  onToggle(e) {\n    this.setState({ replay: !this.state.replay, mode: e });\n  }\n\n  onToggleFrontCamera() {\n    this.setState({ front: !this.state.front });\n  }\n\n  onToggleVideoFeed() {\n    this.setState({ video: !this.state.video });\n  }\n\n  onToggleMultiPose() {\n    this.setState({ multipose: !this.state.multipose });\n  }\n\n  onTracePose(e) {\n    this.setState({ recording: e });\n  }\n\n  onTraceVideo(e) {\n    //console.log(\"tracing video\");\n    this.setState({ videoRecording: e });\n  }\n\n  onStartRecord() {\n    this.setState({ record: true });\n  }\n\n  onStopRecord() {\n    this.setState({ record: false });\n  }\n\n  componentDidMount() {\n    this.setState({\n      height: window.innerHeight,\n      width: Math.min(window.innerWidth, MAX_WIDTH)\n    });\n    setTimeout(() => this.setState({ hideInfo: true }), 20000);\n  }\n\n  render() {\n    const ModeButtons = () => (\n      <div className={styles.modeButtons}>\n        <div className={styles.btnContainer}>\n          <button\n            className={styles.btnLeft}\n            onClick={() => this.onToggle(\"record\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length === 0 ? COLORS.secondary : \"white\",\n              color: this.state.recording.length === 0 ? \"white\" : \"black\"\n            }}\n          >\n            RECORD 📹\n          </button>\n          <button\n            className={styles.btnRight}\n            onClick={() => this.onToggle(\"replay\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            REPLAY ▶️\n          </button>\n          {/* <button\n            className={styles.btnRight}\n            onClick={() => this.onToggle(\"compete\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            COMPETE ⚔️\n          </button> */}\n        </div>\n      </div>\n    );\n\n    const MainContent = (\n      <>\n        <div\n          className={styles.contentDiv}\n          style={{ display: this.state.mode === \"replay\" ? \"block\" : \"none\" }}\n        >\n          <PoseNetReplay\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n            showVideo={true}\n            additionalOptions={false}\n          />\n        </div>\n        {this.state.mode === \"record\" ? (\n          <PoseNet\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            //mobileNetArchitecture={1.01}\n            outputStride={16}\n            loadingText={\"Loading...\"}\n            frontCamera={this.state.front}\n            getPoseRecords={this.onTracePose}\n            getVideoRecords={this.onTraceVideo}\n            showVideo={this.state.video}\n            algorithm={this.state.multipose ? \"multi-pose\" : \"single-pose\"}\n            record={this.state.record}\n            recordVideo\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.mode === \"compete\" ? (\n          <PoseNetMatch\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n          />\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n\n    const RecordToggles = (\n      <div\n        className={styles.toggles}\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        }}\n      >\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleFrontCamera}\n        >\n          {this.state.front ? \"front\" : \"rear\"} camera\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleVideoFeed}\n        >\n          video {this.state.video ? \"on\" : \"off\"}\n        </button>\n        {/* <button\n          className={styles.toggleButton}\n          onClick={this.onToggleMultiPose}\n        >\n          {this.state.multipose ? \"multi-\" : \"single \"}pose\n        </button> */}\n        <button className={styles.toggleButton} onClick={this.onStartRecord}>\n          start recording\n        </button>\n        <button\n          className={styles.toggleButtonRight}\n          onClick={this.onStopRecord}\n        >\n          stop recording\n        </button>\n      </div>\n    );\n\n    const InfoWarning = (\n      <div\n        style={{ display: this.state.hideInfo ? \"none\" : \"initial\" }}\n        className={styles.warningDiv}\n      >\n        <div className={styles.warning}>\n          <code\n            style={{\n              fontSize: 10,\n              color: \"grey\"\n            }}\n          >\n            {/* and single/multipose toggles */}* video on/off toggle doesn't\n            seem to work while camera is already running. please toggle between\n            cameras to make it work.\n          </code>\n        </div>\n      </div>\n    );\n\n    const isRecordingEmpty = this.state.recording.length === 0;\n\n    return (\n      <div className={styles.app}>\n        <div className={styles.appContent}>\n          <div\n            className={styles.frames}\n            style={{ color: isRecordingEmpty ? \"red\" : COLORS.secondary }}\n          >\n            <code>recorded frames: {this.state.recording.length}</code>\n          </div>\n\n          <div\n            style={{\n              display: this.state.mode === \"record\" ? \"flex\" : \"none\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            {RecordToggles}\n            {InfoWarning}\n          </div>\n        </div>\n\n        {MainContent}\n        <ModeButtons />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2q9x4\",\"appContent\":\"App_appContent__1uhZF\",\"contentDiv\":\"App_contentDiv__2hIum\",\"modeButtons\":\"App_modeButtons__3SEgr\",\"frames\":\"App_frames__vi845\",\"warning\":\"App_warning__1RHk8\",\"warningDiv\":\"App_warningDiv__2taWY\",\"toggles\":\"App_toggles__1x73w\",\"toggleButton\":\"App_toggleButton__2MXSU\",\"toggleButtonRight\":\"App_toggleButtonRight__2MklE App_toggleButton__2MXSU\",\"btnContainer\":\"App_btnContainer__3AbS2\",\"btn\":\"App_btn__-YolR\",\"btnLeft\":\"App_btnLeft__1pgwK App_btn__-YolR\",\"btnRight\":\"App_btnRight__2vLku App_btn__-YolR\"};"],"sourceRoot":""}