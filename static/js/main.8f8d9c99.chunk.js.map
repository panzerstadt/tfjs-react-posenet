{"version":3,"sources":["logo.svg","components/Posenet/helpers/themes.js","components/Posenet/helpers/color.js","components/Posenet/utils.js","components/Posenet/index.js","App.js","serviceWorker.js","index.js","components/Posenet/index.module.css"],"names":["module","exports","__webpack_require__","p","googleTheme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","colourNameToHex","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","hex2rgb","hex","result","exec","parseInt","getColorOpacityRangeHex","steps","arguments","length","undefined","rgbIn","faded","max","min","Object","toConsumableArray","Array","map","v","i","amt","makeRange","rgb","color1","color2","factor","slice","Math","round","_interpolateColor","toString","reverse","isMobile","test","navigator","userAgent","drawKeypoints","keypoints","minConfidence","skeletonColor","ctx","scale","forEach","keypoint","score","_keypoint$position","position","y","x","beginPath","arc","PI","fillStyle","fill","toTuple","_ref","drawSkeleton","color","lineWidth","posenet","_ref2","_ref3","_ref4","slicedToArray","ay","ax","_ref5","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSegment","PoseNetComponent","state","loading","error_messages","stream","trace","camera","getCanvas","elem","_this","canvas","getVideo","video","prevProps","prevState","this","props","frontCamera","stopCamera","setupCamera","startCamera","detectPose","errorMessages","getPoseRecords","poses","record","console","log","setState","concat","cam","srcObject","getTracks","t","stop","mediaDevices","getUserMedia","e1","videoWidth","videoHeight","mobile","width","height","audio","facingMode","exact","Promise","resolve","onloadedmetadata","play","_this$props2","getContext","poseDetectionFrame","_this2","_this$props3","algorithm","imageScaleFactor","forceFlipHorizontal","outputStride","minPoseConfidence","maxPoseDetections","minPartConfidence","nmsRadius","showVideo","showPoints","showSkeleton","skeletonLineWidth","net","flipped","poseDetectionFrameInner","asyncToGenerator","regenerator_default","a","mark","_callee3","pose","wrap","_context3","prev","next","t0","estimateSinglePose","sent","push","abrupt","estimateMultiplePoses","clearRect","save","translate","drawImage","restore","tracePose","requestAnimationFrame","apply","mobileNetArchitecture","e2","react_default","createElement","className","styles","loadingText","style","fontSize","playsInline","ref","Component","defaultProps","PoseNetReplay","_Component2","_getPrototypeOf3","_this3","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this$props4","poseDrawFrame","_this$props5","poseRecords","_callee5","clrRange","clr","clrList","_context5","drawPose","minHeight","border","backgroundColor","maxWidth","margin","textAlign","padding","lib_default","data","theme","App","recording","replay","front","multipose","onToggle","bind","assertThisInitialized","onToggleFrontCamera","onToggleVideoFeed","onTrace","onToggleMultiPose","onStartRecord","onStopRecord","e","display","justifyContent","alignItems","flexDirection","src","logo","alt","onClick","Posenet_PoseNetComponent","Posenet_PoseNetReplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f8d9c99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// themes\nexport const googleTheme = {\n  scheme: \"google\",\n  author: \"seth wright (http://sethawright.com)\",\n  base00: \"#1d1f21\",\n  base01: \"#282a2e\",\n  base02: \"#373b41\",\n  base03: \"#969896\",\n  base04: \"#b4b7b4\",\n  base05: \"#c5c8c6\",\n  base06: \"#e0e0e0\",\n  base07: \"#ffffff\",\n  base08: \"#CC342B\",\n  base09: \"#F96A38\",\n  base0A: \"#FBA922\",\n  base0B: \"#198844\",\n  base0C: \"#3971ED\",\n  base0D: \"#3971ED\",\n  base0E: \"#A36AC7\",\n  base0F: \"#3971ED\"\n};\n","export function colourNameToHex(colour) {\n  var colours = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgrey: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370d8\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#d87093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  };\n\n  if (typeof colours[colour.toLowerCase()] != \"undefined\")\n    return colours[colour.toLowerCase()];\n\n  return false;\n}\n\nexport function decimalToHexString(number) {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n\n  return number.toString(16).toUpperCase();\n}\n\nconst hex2rgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgb2hex = function(rgb) {\n  return (\n    \"#\" +\n    ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  );\n};\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nconst _interpolateColor = function(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5;\n  }\n  let result = color1.slice();\n  for (var i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n};\n\nconst lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end;\n};\n\nconst makeRange = (steps, max = 1, min = 0) => {\n  return [...Array(steps)].map((v, i) => lerp(min, max, i / steps));\n};\n\nexport const getColorOpacityRangeHex = (steps = 20, hex) => {\n  const rgbIn = hex2rgb(hex);\n  const faded = hex2rgb(\"#333333\");\n\n  const interpolated = makeRange(steps).map(v =>\n    rgb2hex(_interpolateColor(rgbIn, faded, v))\n  );\n\n  return interpolated.reverse();\n};\n","import * as posenet from \"@tensorflow-models/posenet\";\n\nexport const isAndroid = () => /Android/i.test(navigator.userAgent);\n\nexport const isiOS = () => /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\nexport const isMobile = () => isAndroid() || isiOS();\n\nexport const drawKeypoints = (\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  ctx,\n  scale = 1\n) => {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      ctx.beginPath();\n      ctx.arc(x * scale, y * scale, 3, 0, 2 * Math.PI);\n      ctx.fillStyle = skeletonColor;\n      ctx.fill();\n    }\n  });\n};\n\nconst toTuple = ({ y, x }) => [y, x];\n\nconst drawSegment = ([ay, ax], [by, bx], color, lineWidth, scale, ctx) => {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawSkeleton = (\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  ctx,\n  scale = 1\n) => {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  );\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      ctx\n    );\n  });\n};\n\n// draw3dModel\n// exact same thing\n","// ref: https://github.com/jscriptcoder/tfjs-posenet/blob/master/src/PoseNet/index.jsx\n\n// main imports\nimport React, { Component } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\nimport ReactJson from \"react-json-tree\";\n\n// styles\nimport styles from \"./index.module.css\";\n// google theme\nimport { googleTheme } from \"./helpers/themes\";\nimport { colourNameToHex, getColorOpacityRangeHex } from \"./helpers/color\";\n\n// components\nimport { isMobile, drawKeypoints, drawSkeleton } from \"./utils\";\n\nexport default class PoseNetComponent extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: []\n  };\n  camera = undefined;\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.frontCamera !== this.props.frontCamera) {\n        // stop existing camera\n        this.stopCamera();\n        // setup and start\n        this.camera = await this.setupCamera();\n        this.startCamera();\n        // detect pose\n        this.detectPose();\n      }\n    }\n  }\n\n  errorMessages() {\n    // pipe out error messages\n    if (this.props.errorMessages) {\n      this.props.errorMessages(this.state.error_messages);\n    }\n  }\n\n  // the traced sequence\n  getPoseRecords() {\n    if (this.props.getPoseRecords) {\n      this.props.getPoseRecords(this.state.trace);\n    }\n  }\n\n  tracePose(poses) {\n    if (this.props.record) {\n      console.log(\"recording frame!\");\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  stopCamera() {\n    const cam = this.camera;\n    if (cam) {\n      const stream = cam.srcObject;\n      const tracks = stream.getTracks();\n\n      // stop all tracks\n      tracks.map(t => t.stop());\n      this.camera = undefined;\n      this.setState({ loading: true, stop: true });\n    }\n  }\n\n  startCamera() {\n    const cam = this.camera;\n    if (cam) {\n      this.setState({ loading: false, stop: false });\n    } else {\n      this.stopCamera();\n    }\n  }\n\n  async setupCamera() {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const { videoWidth, videoHeight } = this.props;\n    const video = this.video;\n    const mobile = isMobile();\n    const frontCamera = this.props.frontCamera;\n\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: frontCamera ? \"user\" : { exact: \"environment\" },\n        width: mobile ? void 0 : videoWidth,\n        height: mobile ? void 0 : videoHeight\n      }\n    });\n\n    video.srcObject = stream;\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        // Once the video metadata is ready, we can start streaming video\n        video.play();\n        resolve(video); // promise returns video\n      };\n    });\n  }\n\n  detectPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // trace\n        console.log(poses);\n        this.tracePose(poses);\n        this.getPoseRecords();\n        // call next recursion\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async componentDidMount() {\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n    console.log(\"loaded mobilenet\");\n    console.log(this.net);\n\n    try {\n      this.camera = await this.setupCamera();\n    } catch (e) {\n      const e2 =\n        \"This browser does not support video capture, or this device does not have a camera\";\n      this.setState({ error_messages: e2 });\n      throw e2;\n    } finally {\n      this.setState({ loading: false });\n    }\n\n    this.detectPose();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounts!\");\n    this.stopCamera();\n    this.setState({ stop: true });\n  }\n\n  render() {\n    const loading = this.state.loading ? (\n      <div className={styles.loading}>\n        <code>{this.props.loadingText}</code>\n        <br />\n        <code style={{ color: \"red\", fontSize: 12 }}>\n          {this.state.error_messages}\n        </code>\n      </div>\n    ) : (\n      \"\"\n    );\n\n    this.errorMessages();\n\n    return (\n      <div className={styles.posenet}>\n        {loading}\n        <video playsInline ref={this.getVideo} />\n        {/* <Webcam ref={this.getVideo} /> */}\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n\nexport class PoseNetReplay extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false\n  };\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  drawPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDrawFrame(ctx);\n  }\n\n  poseDrawFrame(ctx) {\n    const {\n      minPoseConfidence,\n      minPartConfidence,\n      videoWidth,\n      videoHeight,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth\n    } = this.props;\n\n    const { poseRecords } = this.props;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      poses = poseRecords;\n\n      const clrRange = poses.length;\n      let clr = colourNameToHex(skeletonColor) || \"#cccccc\";\n\n      const clrList = getColorOpacityRangeHex(clrRange, clr);\n\n      console.log(\"color list\");\n      console.log(clrList);\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.map(({ score, keypoints }, i) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, clrList[i], ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              clrList[i],\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  componentDidMount() {\n    this.drawPose();\n  }\n\n  render() {\n    const { poseRecords } = this.props;\n\n    return (\n      <div>\n        <div\n          style={{\n            minHeight: \"50vh\",\n            border: \"2px solid salmon\",\n            backgroundColor: \"#050517\",\n            maxWidth: 800,\n            margin: \"3rem auto\"\n          }}\n        >\n          <canvas ref={this.getCanvas} />\n        </div>\n\n        <div\n          style={{\n            height: \"100%\",\n            maxWidth: 800,\n            margin: \"3rem auto\",\n            textAlign: \"left\",\n            border: \"1px dashed lightgrey\",\n            padding: \"0 10px\"\n          }}\n        >\n          <ReactJson data={poseRecords} theme={googleTheme} />\n        </div>\n      </div>\n    );\n  }\n}\n","// main imports\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n\n// styles\nimport \"./App.css\";\n\n// components\nimport PoseNet, { PoseNetReplay } from \"./components/Posenet\";\n\nclass App extends Component {\n  state = {\n    recording: [],\n    replay: false,\n    front: false,\n    video: true,\n    multipose: false,\n    stop: false\n  };\n  onToggle = this.onToggle.bind(this);\n  onToggleFrontCamera = this.onToggleFrontCamera.bind(this);\n  onToggleVideoFeed = this.onToggleVideoFeed.bind(this);\n  onTrace = this.onTrace.bind(this);\n  onToggleMultiPose = this.onToggleMultiPose.bind(this);\n  onStartRecord = this.onStartRecord.bind(this);\n  onStopRecord = this.onStopRecord.bind(this);\n\n  onToggle() {\n    this.setState({ replay: !this.state.replay });\n  }\n\n  onToggleFrontCamera() {\n    this.setState({ front: !this.state.front });\n  }\n\n  onToggleVideoFeed() {\n    this.setState({ video: !this.state.video });\n  }\n\n  onToggleMultiPose() {\n    this.setState({ multipose: !this.state.multipose });\n  }\n\n  onTrace(e) {\n    this.setState({ recording: e });\n  }\n\n  onStartRecord() {\n    this.setState({ record: true });\n  }\n\n  onStopRecord() {\n    this.setState({ record: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          style={{\n            minHeight: 200,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\"\n          }}\n        >\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <br />\n          <div\n            style={{\n              width: \"80%\",\n              display: \"flex\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <button onClick={this.onToggle}>toggle replay</button>\n            <code>recorded frames: {this.state.recording.length}</code>\n          </div>\n          <hr style={{ width: \"100%\" }} />\n          <div\n            style={{\n              width: \"80%\",\n              display: \"flex\",\n              justifyContent: \"space-evenly\"\n            }}\n          >\n            <button onClick={this.onToggleFrontCamera}>\n              {this.state.front ? \"front\" : \"rear\"} camera\n            </button>\n            <button onClick={this.onToggleVideoFeed}>\n              video {this.state.video ? \"on\" : \"off\"}\n            </button>\n            <button onClick={this.onToggleMultiPose}>\n              {this.state.multipose ? \"multi-\" : \"single \"}pose\n            </button>\n            <button onClick={this.onStartRecord}>start recording</button>\n            <button onClick={this.onStopRecord}>stop recording</button>\n          </div>\n          <br />\n          <code\n            style={{\n              fontSize: 10,\n              color: \"grey\",\n              width: \"70%\"\n            }}\n          >\n            *video toggle and single/multipose toggles don't seem to work while\n            camera is already running. please toggle between cameras to make it\n            work.\n          </code>\n        </div>\n\n        {!this.state.replay ? (\n          <PoseNetReplay poseRecords={this.state.recording} />\n        ) : (\n          <PoseNet\n            videoWidth={600}\n            videoHeight={500}\n            mobileNetArchitecture={0.5}\n            outputStride={16}\n            loadingText={\"Loading...\"}\n            frontCamera={this.state.front}\n            getPoseRecords={this.onTrace}\n            showVideo={this.state.video}\n            algorithm={this.state.multipose ? \"multi-pose\" : \"single-pose\"}\n            record={this.state.record}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Posenet_loading__3_Gk5\",\"posenet\":\"Posenet_posenet__3mPFo\"};"],"sourceRoot":""}