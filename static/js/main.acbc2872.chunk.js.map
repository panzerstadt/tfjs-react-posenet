{"version":3,"sources":["components/Posenet/helpers/SliderScrubber/index.module.css","logo.svg","components/Posenet/helpers/color.js","components/Posenet/utils.js","components/Posenet/helpers/SliderScrubber/index.js","components/Posenet/helpers/download.js","components/Posenet/helpers/share.js","components/Posenet/helpers/cosineSimilarity.js","components/Posenet/helpers/scorer.js","lib/constants.js","components/Posenet/index.js","App.js","serviceWorker.js","index.js","App.module.css","components/Posenet/index.module.css"],"names":["module","exports","sliderScrubber","__webpack_require__","p","colourNameToHex","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","hex2rgb","hex","result","exec","parseInt","getColorOpacityRangeHex","steps","arguments","length","undefined","rgbIn","faded","max","min","Object","toConsumableArray","Array","map","v","i","amt","makeRange","rgb","color1","color2","factor","slice","Math","round","_interpolateColor","toString","reverse","isMobile","test","navigator","userAgent","drawKeypoints","keypoints","minConfidence","skeletonColor","ctx","scale","forEach","keypoint","score","_keypoint$position","position","y","x","beginPath","arc","PI","fillStyle","fill","toTuple","_ref","drawSkeleton","color","lineWidth","posenet","_ref2","_ref3","_ref4","slicedToArray","ay","ax","_ref5","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSegment","SliderScrubber","state","value","valueOld","diff","snap","onChangeStart","_this","bind","assertThisInitialized","onChangeComplete","onChange","vOut","this","setState","props","range","react_default","a","createElement","className","styles","js_default","draggableTrack","maxValue","minValue","Component","download","content","fileName","contentType","document","file","Blob","type","href","URL","createObjectURL","click","template_params","subject","message","from","sendEmail","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","abrupt","Promise","resolve","emailjs","then","response","console","log","status","text","err","stop","_x","apply","magnitude","vec","squaredTotal","num","pow","reduce","b","sqrt","cosineSimilarity","vector1","vector2","vec1","vec2","Error","dotProduct","remap","low1","high1","low2","high2","vectorizePose","pose","arrayOut","resize","cleanup","_calculatePoseDomain","extent","calculatePoseDomain","xMin","xMax","yMin","yMax","concat","len","scoreSimilarity","currentPose","currentTimeFrame","comparisonPoseSet","compareNearestFrames","includeDistance","accuracyInDecimals","c_Pose","scoreFrames","frameNumber","poseSet","count","includeDist","index","split","leftHalf","rightHalf","closestNIndices","sort","distance","abs","findClosestPoses","weightedSimilarity","comparisonPose","comparisonPoseConfidence","comparisonPoseDistance","comparisonPoseIndex","similarity","toFixed","highestScore","currentFrameScore","filter","normalized","highest","current","all","COLORS","GHOST","GWARA_GIRL","poseRecords","PoseNetComponent","loading","error_messages","stream","trace","frames","ghostIndex","repeat","totalScore","scoreOpacity","time","Date","now","camera","timeout","previousDelta","lastScore","traceVideo","getCanvas","elem","canvas","getVideo","video","prevProps","prevState","frontCamera","stopCamera","setupCamera","startCamera","detectPose","clearTimeout","setTimeout","_this2","errorMessages","getPoseRecords","getVideoRecords","poses","record","blob","cam","srcObject","getTracks","t","mediaDevices","getUserMedia","e1","videoWidth","videoHeight","mobile","width","height","audio","facingMode","exact","onloadedmetadata","play","_this$props2","getContext","poseDetectionFrame","_this3","_this$props3","algorithm","imageScaleFactor","forceFlipHorizontal","outputStride","minPoseConfidence","maxPoseDetections","minPartConfidence","nmsRadius","showVideo","showPoints","showSkeleton","ghostColor","skeletonLineWidth","maxFPS","compete","net","flipped","poseDetectionFrameInner","_callee3","currentDelta","delta","millis","g_keypoints","userPose","_context3","requestAnimationFrame","t0","estimateSinglePose","sent","push","estimateMultiplePoses","clearRect","save","translate","drawImage","restore","floor","recordVideo","tracePose","toBlob","objectSpread","_x3","mobileNetArchitecture","e2","_this4","loadingText","style","fontSize","scores","opacity","playsInline","ref","defaultProps","PoseNetReplay","_Component2","_getPrototypeOf3","_this5","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","loadedPoseRecords","loadedPoseVideo","loadData","handleFileRead","inherits","createClass","key","_this$props4","poseDrawFrame","_this$props5","_this$props6","poseVideo","_callee5","drawPoses","clrRange","clr","clrList","frame","url","_context5","src","onload","revokeObjectURL","drawPose","e","JSON","parse","fileReader","FileReader","onloadend","readAsText","target","files","_this6","_this$props7","additional_buttons","contextualOptionsDiv","contextualOptions","maxWidth","margin","display","button","onClick","stringify","_callee6","_context6","alert","padding","name","accept","replayDiv","backgroundColor","overflow","scrubberDiv","scrubberInnerDiv","SliderScrubber_SliderScrubber","additionalOptions","App","recording","videoRecording","replay","front","multipose","mode","dims","hideInfo","onToggle","onToggleFrontCamera","onToggleVideoFeed","onTracePose","onTraceVideo","onToggleMultiPose","onStartRecord","onStopRecord","window","innerHeight","innerWidth","MainContent","Fragment","contentDiv","Posenet_PoseNetReplay","Posenet_PoseNetComponent","RecordToggles","toggles","justifyContent","toggleButton","toggleButtonRight","InfoWarning","warningDiv","warning","isRecordingEmpty","app","appContent","flexDirection","alignItems","modeButtons","btnContainer","btnLeft","btn","btnRight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister","s"],"mappings":"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","file":"static/js/main.acbc2872.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderScrubber\":\"SliderScrubber_sliderScrubber__2PdqC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function colourNameToHex(colour) {\n  var colours = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgrey: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370d8\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#d87093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  };\n\n  if (typeof colours[colour.toLowerCase()] != \"undefined\")\n    return colours[colour.toLowerCase()];\n\n  return false;\n}\n\nexport function decimalToHexString(number) {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n\n  return number.toString(16).toUpperCase();\n}\n\nconst hex2rgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgb2hex = function(rgb) {\n  return (\n    \"#\" +\n    ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  );\n};\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nconst _interpolateColor = function(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5;\n  }\n  let result = color1.slice();\n  for (var i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n};\n\nconst lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end;\n};\n\nconst makeRange = (steps, max = 1, min = 0) => {\n  return [...Array(steps)].map((v, i) => lerp(min, max, i / steps));\n};\n\nexport const getColorOpacityRangeHex = (steps = 20, hex) => {\n  const rgbIn = hex2rgb(hex);\n  const faded = hex2rgb(\"#333333\");\n\n  const interpolated = makeRange(steps).map(v =>\n    rgb2hex(_interpolateColor(rgbIn, faded, v))\n  );\n\n  return interpolated.reverse();\n};\n","import * as posenet from \"@tensorflow-models/posenet\";\n\nexport const isAndroid = () => /Android/i.test(navigator.userAgent);\n\nexport const isiOS = () => /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\nexport const isMobile = () => isAndroid() || isiOS();\n\nexport const drawKeypoints = (\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  ctx,\n  scale = 1\n) => {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      ctx.beginPath();\n      ctx.arc(x * scale, y * scale, 3, 0, 2 * Math.PI);\n      ctx.fillStyle = skeletonColor;\n      ctx.fill();\n    }\n  });\n};\n\nconst toTuple = ({ y, x }) => [y, x];\n\nconst drawSegment = ([ay, ax], [by, bx], color, lineWidth, scale, ctx) => {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawSkeleton = (\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  ctx,\n  scale = 1\n) => {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  );\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      ctx\n    );\n  });\n};\n\n// draw3dModel\n// exact same thing\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\n\n// styles\nimport styles from \"./index.module.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport \"./index.css\";\n\nexport default class SliderScrubber extends Component {\n  state = {\n    value: {\n      min: 10,\n      max: 20\n    },\n    valueOld: {\n      min: 10,\n      max: 20,\n      diff: 0\n    },\n    snap: true\n  };\n  onChangeStart = this.onChangeStart.bind(this);\n  onChangeComplete = this.onChangeComplete.bind(this);\n  onChange = this.onChange.bind(this);\n\n  onChangeStart(v) {\n    const vOut = {\n      min: v.min,\n      max: v.max,\n      diff: v.max - v.min\n    };\n    this.setState({ valueOld: vOut });\n  }\n\n  onChangeComplete(v) {\n    if (this.state.valueOld.min === v.min) {\n      const vOut = {\n        min: v.max - this.state.valueOld.diff,\n        max: v.max\n      };\n      this.setState({ value: vOut });\n    }\n\n    if (this.props.onChangeComplete) {\n      this.props.onChangeComplete(v);\n    }\n  }\n\n  onChange(v) {\n    this.setState({ value: v });\n\n    if (this.props.onChange) {\n      this.props.onChange(v);\n    }\n  }\n\n  render() {\n    const { range } = this.props;\n\n    const min = range ? range.min || 0 : 0;\n    const max = range ? range.max || range || 100 : 100;\n    const clampedValue = {\n      min: Math.min(Math.max(this.state.value.min, min), max - 20),\n      max: Math.min(this.state.value.max, max)\n    };\n\n    return (\n      <div className={styles.sliderScrubber}>\n        <InputRange\n          draggableTrack\n          maxValue={max}\n          minValue={min}\n          onChange={this.onChange}\n          onChangeStart={this.onChangeStart}\n          onChangeComplete={this.onChangeComplete}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nconst download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport default download;\n","import * as emailjs from \"emailjs-com\";\n\nconst TEMPLATE_ID = \"posenet\";\nconst SERVICE_ID = \"default_service\";\nconst USER_ID = \"user_ljTfIJFviZGfuGmui594C\";\n\nconst template_params = {\n  subject: \"subject_value\",\n  message: \"message_value\",\n  from: \"from_value\"\n};\n\nexport const sendEmail = async ({ subject, message, from }) => {\n  const data = { subject, message, from };\n\n  return new Promise(resolve => {\n    emailjs\n      .send(SERVICE_ID, TEMPLATE_ID, data || template_params, USER_ID)\n      .then(\n        response => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          resolve(true);\n        },\n        err => {\n          console.log(\"FAILED...\", err);\n          resolve(false);\n        }\n      );\n  });\n};\n\nexport const sendEmailWithAttachment = async ({ event }) => {\n  console.log(event);\n};\n","export const magnitude = vec => {\n  const squaredTotal = vec.map(num => Math.pow(num, 2)).reduce((a, b) => a + b); // sum of squares\n  const mag = Math.sqrt(squaredTotal); // squared root\n  return mag;\n};\n\nexport const dotProduct = (vec1, vec2) => {\n  if (vec1.length !== vec2.length) {\n    throw new Error(\n      \"vector lengths are not similar. please make sure vector 1 and vector 2 have the same length.\"\n    );\n  }\n  const sumOfMultiplications = vec1\n    .map((vec, i) => vec * vec2[i]) // multiply each scalar in the vector\n    .reduce((a, b) => a + b); // sum\n  return sumOfMultiplications;\n};\n\nexport const cosineSimilarity = (vector1, vector2) => {\n  const sim =\n    dotProduct(vector1, vector2) / (magnitude(vector1) * magnitude(vector2));\n  return sim;\n};\n","import { extent } from \"d3-array\";\nimport { cosineSimilarity } from \"./cosineSimilarity\";\n\nfunction remap(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\n// find bounding box of pose\nconst calculatePoseDomain = pose => {\n  const keypoints = pose.keypoints;\n  const x = keypoints.map(v => v.position.x);\n  const y = keypoints.map(v => v.position.y);\n\n  const xDomain = extent(x);\n  const yDomain = extent(y);\n\n  return { x: xDomain, y: yDomain };\n};\n\n// return an array of poses with current pose in the middle of array\n// frameNumber == which point in time (of the poseSet) do you want to compare?\nconst findClosestPoses = (\n  frameNumber,\n  poseSet,\n  count = 5,\n  includeDist = false\n) => {\n  const index = frameNumber;\n  // find n closest poses compared to input pose and its index\n  const split = Math.round(count / 2);\n  // the first item in leftHalf is the current index\n  const leftHalf = Array(split)\n    .fill(split)\n    .map((v, i) => Math.max(index - i, 0));\n\n  const rightHalf = Array(count - split)\n    .fill(count - split)\n    .map((v, i) => index + 1 + i);\n\n  const closestNIndices = [...leftHalf, ...rightHalf].sort((a, b) => a - b);\n\n  if (includeDist) {\n    return closestNIndices.map((v, i) => {\n      return {\n        distance: Math.abs(index - v),\n        index: v,\n        pose: poseSet[v]\n      };\n    });\n  } else {\n    return closestNIndices.map(v => poseSet[v]);\n  }\n};\n\n// convert pose into vector,\n// option to resize to 0-1 for scoring\n// option to ensure vector is length 34 (for tfjs posenet)\nconst vectorizePose = (pose, resize = true, cleanup = true) => {\n  let arrayOut;\n\n  if (!pose || pose.length === 0) return [];\n\n  // maintain pose order\n  const keypoints = pose.keypoints;\n  // const keypoints = pose.keypoints.sort((a, b) => {\n  //   const x = a.part;\n  //   const y = b.part;\n\n  //   if (x < y) return -1;\n  //   if (x > y) return 1;\n  //   return 0;\n  // });\n\n  // resize == remap x and y to 0 to 1\n  if (resize) {\n    const { x, y } = calculatePoseDomain(pose);\n    const xMin = x[0];\n    const xMax = x[1];\n    const yMin = y[0];\n    const yMax = y[1];\n\n    //todo test this\n    arrayOut = [].concat.apply(\n      [],\n      keypoints.map(v => [\n        remap(v.position.y, yMin, yMax, 0, 1),\n        remap(v.position.x, xMin, xMax, 0, 1)\n      ])\n    );\n  } else {\n    arrayOut = [].concat.apply(\n      [],\n      keypoints.map(v => [v.position.y, v.position.x])\n    );\n  }\n\n  // ensure length === 34\n  if (cleanup) {\n    const len = arrayOut.length;\n    if (len !== 34) {\n      if (len < 34) {\n        console.log(`current keypoint count is ${len}. should be 34.`);\n      }\n      arrayOut = arrayOut.slice(0, 34);\n    }\n  }\n\n  return arrayOut;\n};\n\nconst scoreSimilarity = (\n  currentPose,\n  currentTimeFrame,\n  comparisonPoseSet,\n  compareNearestFrames = 5,\n  includeDistance = true,\n  accuracyInDecimals = 4\n) => {\n  const PENALTY = 0.001;\n  const c_Pose = vectorizePose(currentPose, true, true);\n\n  // score nearest n poses with current pose\n  const scoreFrames = findClosestPoses(\n    currentTimeFrame,\n    comparisonPoseSet,\n    compareNearestFrames,\n    includeDistance\n  ).map((v, i) => {\n    if (!v.pose) {\n      return {\n        distance: 1,\n        score: 0,\n        cosineSimilarity: 0,\n        weightedSimilarity: 0,\n        index: v.index\n      };\n    }\n\n    const comparisonPose = vectorizePose(v.pose, true, true);\n    const comparisonPoseConfidence = v.pose.score;\n    const comparisonPoseDistance = v.distance;\n    const comparisonPoseIndex = v.index;\n\n    // cosine similarity\n    const similarity = cosineSimilarity(c_Pose, comparisonPose).toFixed(\n      accuracyInDecimals\n    );\n    // penalize by accuracy/confidence\n    const weightedSimilarity = comparisonPoseConfidence * similarity;\n    // also penalize by how many frame did you lag behind\n    const finalSimilarity =\n      weightedSimilarity - comparisonPoseDistance * PENALTY;\n\n    return {\n      distance: comparisonPoseDistance,\n      score: finalSimilarity,\n      cosineSimilarity: similarity,\n      weightedSimilarity: weightedSimilarity,\n      index: comparisonPoseIndex\n    };\n  });\n\n  const highestScore = scoreFrames\n    .map(v => v.score)\n    .sort((a, b) => a - b)\n    .reverse()[0];\n  const currentFrameScore = scoreFrames.filter(v => v.distance === 0)[0].score;\n\n  return {\n    score: {\n      normalized: Math.max(remap(highestScore, 0.85, 1.0, 0, 100), 0),\n      highest: highestScore,\n      current: currentFrameScore,\n      all: scoreFrames\n    }\n  };\n};\n\nexport default scoreSimilarity;\n","export const DEBUG = false;\nexport const COLORS = {\n  main: \"#5FD49B\",\n  secondary: \"#FF8547\",\n  highlight: \"#BAFFFF\"\n};\n","// ref: https://github.com/jscriptcoder/tfjs-posenet/blob/master/src/PoseNet/index.jsx\n\n// main imports\nimport React, { Component } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Camera from \"react-html5-camera-photo\";\nimport ReactJson from \"react-json-tree\";\n\n// styles\nimport styles from \"./index.module.css\";\n// google theme\nimport { googleTheme } from \"./helpers/themes\";\nimport { colourNameToHex, getColorOpacityRangeHex } from \"./helpers/color\";\n\n// components\nimport { isMobile, drawKeypoints, drawSkeleton } from \"./utils\";\nimport Scrubber from \"./helpers/SliderScrubber\";\nimport download from \"./helpers/download\";\nimport { sendEmail } from \"./helpers/share\";\nimport scoreSimilarity from \"./helpers/scorer\";\n\n// constants\nimport { DEBUG } from \"../../lib/constants\";\n\n// ghost (the dance move you're competing with)\nimport GWARA_GIRL from \"./GWARA_GIRL.json\";\nimport GWARA_RAHMAT from \"./gwara-gwara-rahmat.json\";\nconst GHOST = GWARA_GIRL.poseRecords;\n\nexport default class PoseNetComponent extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 10,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    ghostColor: \"lightgrey\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false,\n    maxFPS: null,\n    compete: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: [],\n    ghostIndex: 0,\n    repeat: false,\n    score: 0,\n    totalScore: 0,\n    scoreOpacity: 0,\n    time: Date.now()\n  };\n  camera = undefined;\n  timeout = undefined;\n  previousDelta = 0;\n  lastScore = 0;\n  traceVideo = this.traceVideo.bind(this);\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.frontCamera !== this.props.frontCamera) {\n        // stop existing camera\n        this.stopCamera();\n        // setup and start\n        this.camera = await this.setupCamera();\n        this.startCamera();\n        // detect pose\n        this.detectPose();\n      }\n    }\n\n    if (prevState !== this.state) {\n      if (prevState.score !== this.state.score && this.state.score !== 0) {\n        if (this.timeout) clearTimeout(this.timeout);\n        this.setState({ scoreOpacity: 1 });\n        this.timeout = setTimeout(\n          () => this.setState({ scoreOpacity: 0 }),\n          3000\n        );\n      }\n    }\n  }\n\n  errorMessages() {\n    // pipe out error messages\n    if (this.props.errorMessages) {\n      this.props.errorMessages(this.state.error_messages);\n    }\n  }\n\n  // the traced sequence\n  getPoseRecords() {\n    if (this.props.getPoseRecords) {\n      this.props.getPoseRecords(this.state.trace);\n    }\n  }\n\n  getVideoRecords() {\n    if (this.props.getVideoRecords) {\n      this.props.getVideoRecords(this.state.frames);\n    }\n  }\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  stopCamera() {\n    const cam = this.camera;\n    if (cam) {\n      const stream = cam.srcObject;\n      const tracks = stream.getTracks();\n\n      // stop all tracks\n      tracks.map(t => t.stop());\n      this.camera = undefined;\n      this.setState({ loading: true, stop: true });\n    }\n  }\n\n  startCamera() {\n    const cam = this.camera;\n    if (cam) {\n      this.setState({ loading: false, stop: false });\n    } else {\n      this.stopCamera();\n    }\n  }\n\n  async setupCamera() {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const { videoWidth, videoHeight } = this.props;\n    const video = this.video;\n    const mobile = isMobile();\n    const frontCamera = this.props.frontCamera;\n\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: frontCamera ? \"user\" : { exact: \"environment\" },\n        width: mobile ? void 0 : videoWidth,\n        height: mobile ? void 0 : videoHeight\n      }\n    });\n\n    video.srcObject = stream;\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        // Once the video metadata is ready, we can start streaming video\n        video.play();\n        resolve(video); // promise returns video\n      };\n    });\n  }\n\n  detectPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      ghostColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop,\n      maxFPS,\n      compete\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async currentDelta => {\n      // this is to cap fps\n      //requestAnimationFrame(poseDetectionFrameInner);\n      requestAnimationFrame(poseDetectionFrameInner);\n      var delta = currentDelta - this.previousDelta;\n      if (maxFPS && delta < 1000 / maxFPS) {\n        return;\n      }\n\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      // SHOW VIDEO FRAME\n      // ----------------\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // DRAW CURRENT PREDICTION\n      // -----------------------\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      // DRAW GWARA GIRL\n      // ---------------\n      if (compete) {\n        if (!GHOST[this.state.ghostIndex]) {\n          // end of loop\n          console.log(\"RESET!!!!\");\n          const millis = Date.now() - this.state.time;\n          console.log(\"seconds elapsed = \" + Math.floor(millis / 1000));\n\n          // for now, repeat loop\n          if (this.state.repeat) {\n            // ENDLESS MODE FTW\n            this.setState({ ghostIndex: 0 });\n          } else {\n            // TODO: give user the score\n            this.setState({ ghostIndex: 0, totalScore: 0, time: Date.now() });\n          }\n        }\n        const g_keypoints = GHOST[this.state.ghostIndex].keypoints;\n        const g_score = GHOST[this.state.ghostIndex].score;\n\n        if (g_score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(g_keypoints, minPartConfidence, ghostColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              g_keypoints,\n              minPartConfidence,\n              ghostColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n\n        // SCORE USER AGAINST GHOST\n        const userPose = poses[0];\n        const similarity = scoreSimilarity(\n          userPose,\n          this.state.ghostIndex, // TODO: change this\n          GHOST\n        );\n\n        const score = parseInt(similarity.score.normalized.toFixed(2));\n        this.setState(prev => ({\n          score: score,\n          totalScore: prev.totalScore + score\n        }));\n      }\n\n      // SHOW OUTPUT\n      // -----------\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            console.log(\"recording frame and video!\");\n          } else {\n            console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        this.setState(prevState => ({\n          ...prevState,\n          ghostIndex: prevState.ghostIndex + 1\n        }));\n\n        this.previousDelta = currentDelta;\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async componentDidMount() {\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n    //console.log(\"loaded mobilenet\");\n    //console.log(this.net);\n\n    try {\n      this.camera = await this.setupCamera();\n    } catch (e) {\n      const e2 =\n        \"This browser does not support video capture, or this device does not have a camera\";\n      this.setState({ error_messages: e2 });\n      throw e2;\n    } finally {\n      this.setState({ loading: false });\n    }\n\n    this.detectPose();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounts!\");\n    this.stopCamera();\n    this.setState({ stop: true });\n  }\n\n  render() {\n    const loading = this.state.loading ? (\n      <div className={styles.loading}>\n        <code>{this.props.loadingText}</code>\n        <br />\n        <code style={{ color: \"red\", fontSize: 12 }}>\n          {this.state.error_messages}\n        </code>\n      </div>\n    ) : (\n      \"\"\n    );\n\n    this.errorMessages();\n\n    const Score = () => {\n      if (this.state.score !== 0) this.lastScore = this.state.score;\n\n      return (\n        <div className={styles.scores}>\n          <p className={styles.totalScore}>{this.state.totalScore}</p>\n          <p\n            className={styles.score}\n            style={{\n              opacity: this.state.scoreOpacity\n            }}\n          >\n            {this.lastScore}\n          </p>\n        </div>\n      );\n    };\n\n    return (\n      <div className={styles.posenet}>\n        {this.props.compete && <Score />}\n        {loading}\n        <video playsInline ref={this.getVideo} />\n        {/* <Webcam ref={this.getVideo} /> */}\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n\nexport class PoseNetReplay extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    ghostColor: \"grey\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    additionalOptions: true\n  };\n  state = {\n    loadedPoseRecords: [],\n    loadedPoseVideo: []\n  };\n\n  fileReader;\n  onChange = this.onChange.bind(this);\n  loadData = this.loadData.bind(this);\n  handleFileRead = this.handleFileRead.bind(this);\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  drawPose(range) {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDrawFrame(ctx, range);\n  }\n\n  poseDrawFrame(ctx, range) {\n    const {\n      minPoseConfidence,\n      minPartConfidence,\n      videoWidth,\n      videoHeight,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      showVideo,\n      flipped\n    } = this.props;\n\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const poseDetectionFrameInner = async () => {\n      const drawPoses = () => {\n        // For each pose (i.e. person) detected in an image, loop through the poses\n        // and draw the resulting skeleton and keypoints if over certain confidence\n        // scores\n        poses.map(({ score, keypoints }, i) => {\n          if (score >= minPoseConfidence) {\n            if (showPoints) {\n              drawKeypoints(keypoints, minPartConfidence, clrList[i], ctx);\n            }\n            if (showSkeleton) {\n              drawSkeleton(\n                keypoints,\n                minPartConfidence,\n                clrList[i],\n                skeletonLineWidth,\n                ctx\n              );\n            }\n          }\n        });\n      };\n\n      let poses = [];\n      poses = range ? poseRecords.slice(range.min, range.max) : poseRecords;\n\n      let video = [];\n\n      if (range) {\n        poses = poseRecords.slice(range.min, range.max);\n\n        if (poseVideo) {\n          video = poseVideo.slice(range.min, range.max);\n        }\n      } else {\n        poses = poseRecords;\n\n        if (poseVideo) {\n          video = poseVideo;\n        }\n      }\n      video = video[video.length - 1];\n\n      const clrRange = poses.length;\n      let clr = colourNameToHex(skeletonColor) || \"#cccccc\";\n\n      const clrList = getColorOpacityRangeHex(clrRange, clr);\n      clrList.reverse()[0] = \"#fff\";\n      clrList.reverse();\n\n      if (showVideo && poseVideo.length > 1 && poses.length > 1) {\n        // turn blob into data\n        const frame = document.createElement(\"img\");\n        const url = URL.createObjectURL(video);\n\n        frame.src = url;\n\n        // temp draw\n        // frame.id = \"frame\";\n        // frame.height = 300;\n        // document.getElementById(\"frame\").replaceWith(frame);\n\n        frame.onload = () => {\n          // why? : https://stackoverflow.com/questions/12387310/html5-drawimage-works-in-firefox-not-chrome\n\n          ctx.clearRect(0, 0, videoWidth, videoHeight);\n          // draw\n          ctx.save();\n          if (flipped) {\n            // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n            ctx.scale(-1, 1);\n            ctx.translate(-videoWidth, 0);\n          }\n          ctx.drawImage(frame, 0, 0, videoWidth, videoHeight);\n          ctx.restore();\n\n          drawPoses();\n\n          URL.revokeObjectURL(url);\n        };\n      } else {\n        // no video\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n        drawPoses();\n      }\n    };\n\n    requestAnimationFrame(poseDetectionFrameInner);\n  }\n\n  componentDidMount() {\n    this.drawPose();\n  }\n\n  onChange(range) {\n    this.drawPose(range);\n  }\n\n  handleFileRead(e) {\n    const content = JSON.parse(this.fileReader.result);\n    this.setState({\n      loadedPoseRecords: content.poseRecords || content || [], // content is for backward compatibility\n      loadedPoseVideo: content.poseVideo || []\n    });\n  }\n\n  loadData(e) {\n    this.fileReader = new FileReader();\n    this.fileReader.onloadend = this.handleFileRead;\n\n    // run it\n    this.fileReader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const additional_buttons = (\n      <div className={styles.contextualOptionsDiv}>\n        <div className={styles.contextualOptions}>\n          {poseRecords.length > 1 ? (\n            <div>\n              <div\n                className={styles.download}\n                style={{\n                  maxWidth: 800,\n\n                  margin: \"0 auto\",\n                  display: \"flex\"\n                }}\n              >\n                <button\n                  className={styles.button}\n                  onClick={() =>\n                    download(\n                      JSON.stringify({\n                        poseRecords: poseRecords,\n                        poseVideo: []\n                      }),\n                      \"temp.json\"\n                    )\n                  }\n                >\n                  download data\n                </button>\n\n                <button\n                  className={styles.button}\n                  onClick={async () => {\n                    await sendEmail({\n                      subject: \"GWARA GWARA!\",\n                      message: \"I challenge you! GAWRRR!\",\n                      from: \"Rahmat Hidayat\"\n                    });\n                    alert(\"challenge sent!\");\n                  }}\n                >\n                  send challenge\n                </button>\n                <button\n                  className={styles.button}\n                  onClick={() => {\n                    console.log(\"clearing records!\");\n\n                    return this.setState({\n                      loadedPoseRecords: [],\n                      loadedPoseVideo: []\n                    });\n                  }}\n                >\n                  clear data\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              className={styles.download}\n              style={{ maxWidth: 800, padding: \"10px 0\", margin: \"0 auto\" }}\n            >\n              <input\n                type=\"file\"\n                name=\"pose records upload\"\n                accept=\".json\"\n                onChange={this.loadData}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <div className={styles.replayDiv}>\n        <div\n          style={{\n            backgroundColor: \"#050517\",\n            maxWidth: 800,\n            overflow: \"hidden\",\n            height: \"100vh\"\n          }}\n        >\n          <div>\n            <canvas ref={this.getCanvas} />\n          </div>\n        </div>\n\n        <div className={styles.scrubberDiv}>\n          <div className={styles.scrubberInnerDiv}>\n            <Scrubber onChange={this.onChange} range={poseRecords.length} />\n          </div>\n        </div>\n\n        {/* temporarily show image for debug */}\n        {/* <div style={{ height: 300 }}>\n          <div id=\"frame\" />\n        </div> */}\n        {this.props.additionalOptions ? additional_buttons : \"\"}\n\n        {DEBUG ? (\n          <div\n            style={{\n              height: \"100%\",\n              maxWidth: 800,\n              margin: \"3rem auto\",\n              textAlign: \"left\",\n              border: \"1px dashed lightgrey\",\n              padding: \"0 10px\"\n            }}\n          >\n            <ReactJson data={poseRecords} theme={googleTheme} />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n","// main imports\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n\n// styles\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\n\n// components\nimport PoseNet, { PoseNetReplay } from \"./components/Posenet\";\n\n// constants\nimport { COLORS } from \"./lib/constants\";\n\nconst MAX_WIDTH = 400;\n\nclass App extends Component {\n  state = {\n    recording: [],\n    videoRecording: [],\n    replay: false,\n    front: true,\n    video: true,\n    multipose: false,\n    stop: false,\n    mode: \"record\",\n    dims: {},\n    hideInfo: false\n  };\n  onToggle = this.onToggle.bind(this);\n  onToggleFrontCamera = this.onToggleFrontCamera.bind(this);\n  onToggleVideoFeed = this.onToggleVideoFeed.bind(this);\n  onTracePose = this.onTracePose.bind(this);\n  onTraceVideo = this.onTraceVideo.bind(this);\n  onToggleMultiPose = this.onToggleMultiPose.bind(this);\n  onStartRecord = this.onStartRecord.bind(this);\n  onStopRecord = this.onStopRecord.bind(this);\n\n  onToggle(e) {\n    this.setState({ replay: !this.state.replay, mode: e });\n  }\n\n  onToggleFrontCamera() {\n    this.setState({ front: !this.state.front });\n  }\n\n  onToggleVideoFeed() {\n    this.setState({ video: !this.state.video });\n  }\n\n  onToggleMultiPose() {\n    this.setState({ multipose: !this.state.multipose });\n  }\n\n  onTracePose(e) {\n    this.setState({ recording: e });\n  }\n\n  onTraceVideo(e) {\n    //console.log(\"tracing video\");\n    this.setState({ videoRecording: e });\n  }\n\n  onStartRecord() {\n    this.setState({ record: true });\n  }\n\n  onStopRecord() {\n    this.setState({ record: false });\n  }\n\n  componentDidMount() {\n    this.setState({\n      height: window.innerHeight,\n      width: Math.min(window.innerWidth, MAX_WIDTH)\n    });\n    setTimeout(() => this.setState({ hideInfo: true }), 20000);\n  }\n\n  render() {\n    const ModeButtons = () => (\n      <div className={styles.modeButtons}>\n        <div className={styles.btnContainer}>\n          <button\n            className={styles.btnLeft}\n            onClick={() => this.onToggle(\"record\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length === 0 ? COLORS.secondary : \"white\",\n              color: this.state.recording.length === 0 ? \"white\" : \"black\"\n            }}\n          >\n            RECORD 📹\n          </button>\n          <button\n            className={styles.btn}\n            onClick={() => this.onToggle(\"replay\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            REPLAY ▶️\n          </button>\n          <button\n            className={styles.btnRight}\n            onClick={() => this.onToggle(\"compete\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            COMPETE ⚔️\n          </button>\n        </div>\n      </div>\n    );\n\n    const MainContent = (\n      <>\n        <div\n          className={styles.contentDiv}\n          style={{ display: this.state.mode === \"replay\" ? \"block\" : \"none\" }}\n        >\n          <PoseNetReplay\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n            showVideo={true}\n            additionalOptions={true}\n          />\n        </div>\n        {this.state.mode === \"record\" ? (\n          <PoseNet\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            mobileNetArchitecture={0.5}\n            outputStride={8}\n            loadingText={\"Loading...\"}\n            frontCamera={this.state.front}\n            getPoseRecords={this.onTracePose}\n            getVideoRecords={this.onTraceVideo}\n            showVideo={this.state.video}\n            algorithm={this.state.multipose ? \"multi-pose\" : \"single-pose\"}\n            record={this.state.record}\n            recordVideo\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.mode === \"compete\" ? <p>compete</p> : \"\"}\n      </>\n    );\n\n    const RecordToggles = (\n      <div\n        className={styles.toggles}\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        }}\n      >\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleFrontCamera}\n        >\n          {this.state.front ? \"front\" : \"rear\"} camera\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleVideoFeed}\n        >\n          video {this.state.video ? \"on\" : \"off\"}\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleMultiPose}\n        >\n          {this.state.multipose ? \"multi-\" : \"single \"}pose\n        </button>\n        <button className={styles.toggleButton} onClick={this.onStartRecord}>\n          start recording\n        </button>\n        <button\n          className={styles.toggleButtonRight}\n          onClick={this.onStopRecord}\n        >\n          stop recording\n        </button>\n      </div>\n    );\n\n    const InfoWarning = (\n      <div\n        style={{ display: this.state.hideInfo ? \"none\" : \"initial\" }}\n        className={styles.warningDiv}\n      >\n        <div className={styles.warning}>\n          <code\n            style={{\n              fontSize: 10,\n              color: \"grey\"\n            }}\n          >\n            {/* and single/multipose toggles */}* video on/off toggle doesn't\n            seem to work while camera is already running. please toggle between\n            cameras to make it work.\n          </code>\n        </div>\n      </div>\n    );\n\n    const isRecordingEmpty = this.state.recording.length === 0;\n\n    //return MainContent;\n\n    return (\n      <div className={styles.app}>\n        <div className={styles.appContent}>\n          <div\n            className={styles.frames}\n            style={{\n              color: isRecordingEmpty ? \"red\" : COLORS.secondary,\n              fontSize: 15\n            }}\n          >\n            <code>recorded frames: {this.state.recording.length}</code>\n          </div>\n\n          <div\n            style={{\n              display: this.state.mode === \"record\" ? \"flex\" : \"none\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            {RecordToggles}\n            {InfoWarning}\n          </div>\n        </div>\n\n        {MainContent}\n        <ModeButtons />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2q9x4\",\"appContent\":\"App_appContent__1uhZF\",\"contentDiv\":\"App_contentDiv__2hIum\",\"modeButtons\":\"App_modeButtons__3SEgr\",\"frames\":\"App_frames__vi845\",\"warning\":\"App_warning__1RHk8\",\"warningDiv\":\"App_warningDiv__2taWY\",\"toggles\":\"App_toggles__1x73w\",\"toggleButton\":\"App_toggleButton__2MXSU\",\"toggleButtonRight\":\"App_toggleButtonRight__2MklE App_toggleButton__2MXSU\",\"btnContainer\":\"App_btnContainer__3AbS2\",\"btn\":\"App_btn__-YolR\",\"btnLeft\":\"App_btnLeft__1pgwK App_btn__-YolR\",\"btnRight\":\"App_btnRight__2vLku App_btn__-YolR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Posenet_loading__3_Gk5\",\"posenet\":\"Posenet_posenet__3mPFo\",\"download\":\"Posenet_download__3Ba3B\",\"button\":\"Posenet_button__SsefG\",\"contextualOptions\":\"Posenet_contextualOptions__3IWp1\",\"contextualOptionsDiv\":\"Posenet_contextualOptionsDiv__3A6kY\",\"replayDiv\":\"Posenet_replayDiv__3rekZ\",\"scrubberDiv\":\"Posenet_scrubberDiv__1y8W_\",\"scrubberInnerDiv\":\"Posenet_scrubberInnerDiv__3ywqU\",\"scores\":\"Posenet_scores__3KeYy\",\"s\":\"Posenet_s__2kQ9A\",\"score\":\"Posenet_score__21KTn Posenet_s__2kQ9A\",\"totalScore\":\"Posenet_totalScore__2HVwU Posenet_s__2kQ9A\"};"],"sourceRoot":""}