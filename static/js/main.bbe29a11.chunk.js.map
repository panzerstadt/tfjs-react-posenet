{"version":3,"sources":["components/Posenet/helpers/SliderScrubber/index.module.css","logo.svg","App.module.css","components/Posenet/index.module.css","components/Posenet/helpers/color.js","components/Posenet/utils.js","components/Posenet/helpers/SliderScrubber/index.js","components/Posenet/helpers/download.js","components/Posenet/helpers/share.js","components/Posenet/helpers/cosineSimilarity.js","components/Posenet/helpers/scorer.js","lib/constants.js","components/Posenet/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sliderScrubber","__webpack_require__","p","app","appContent","contentDiv","modeButtons","frames","warning","warningDiv","toggles","toggleButton","toggleButtonRight","btnContainer","btn","btnLeft","btnRight","loading","posenet","download","button","contextualOptions","contextualOptionsDiv","replayDiv","scrubberDiv","scrubberInnerDiv","scores","s","score","totalScore","colourNameToHex","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","hex2rgb","hex","result","exec","parseInt","getColorOpacityRangeHex","steps","arguments","length","undefined","rgbIn","faded","max","min","Object","toConsumableArray","Array","map","v","i","amt","makeRange","rgb","color1","color2","factor","slice","Math","round","_interpolateColor","toString","reverse","isMobile","test","navigator","userAgent","drawKeypoints","keypoints","minConfidence","skeletonColor","ctx","scale","forEach","keypoint","_keypoint$position","position","y","x","beginPath","arc","PI","fillStyle","fill","toTuple","_ref","drawSkeleton","color","lineWidth","_ref2","_ref3","_ref4","slicedToArray","ay","ax","_ref5","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSegment","SliderScrubber","state","value","valueOld","diff","snap","onChangeStart","_this","bind","assertThisInitialized","onChangeComplete","onChange","vOut","this","setState","props","range","react_default","a","createElement","className","styles","js_default","draggableTrack","maxValue","minValue","Component","content","fileName","contentType","document","file","Blob","type","href","URL","createObjectURL","click","template_params","subject","message","from","sendEmail","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","abrupt","Promise","resolve","emailjs","then","response","console","log","status","text","err","stop","_x","apply","magnitude","vec","squaredTotal","num","pow","reduce","b","sqrt","cosineSimilarity","vector1","vector2","vec1","vec2","Error","dotProduct","remap","low1","high1","low2","high2","vectorizePose","pose","arrayOut","resize","cleanup","_calculatePoseDomain","extent","calculatePoseDomain","xMin","xMax","yMin","yMax","concat","len","scoreSimilarity","currentPose","currentTimeFrame","comparisonPoseSet","compareNearestFrames","includeDistance","accuracyInDecimals","c_Pose","scoreFrames","frameNumber","poseSet","count","includeDist","index","split","leftHalf","rightHalf","closestNIndices","sort","distance","abs","findClosestPoses","weightedSimilarity","comparisonPose","comparisonPoseConfidence","comparisonPoseDistance","comparisonPoseIndex","similarity","toFixed","highestScore","currentFrameScore","filter","normalized","highest","current","all","COLORS","GHOST","GWARA_GIRL","poseRecords","PoseNetComponent","error_messages","stream","trace","ghostIndex","repeat","scoreOpacity","camera","timeout","lastScore","traceVideo","getCanvas","elem","canvas","getVideo","video","prevProps","prevState","frontCamera","stopCamera","setupCamera","startCamera","detectPose","clearTimeout","setTimeout","_this2","errorMessages","getPoseRecords","getVideoRecords","poses","record","blob","cam","srcObject","getTracks","t","mediaDevices","getUserMedia","e1","videoWidth","videoHeight","mobile","width","height","audio","facingMode","exact","onloadedmetadata","play","_this$props2","getContext","poseDetectionFrame","_this3","_this$props3","algorithm","imageScaleFactor","forceFlipHorizontal","outputStride","minPoseConfidence","maxPoseDetections","minPartConfidence","nmsRadius","showVideo","showPoints","showSkeleton","ghostColor","skeletonLineWidth","net","flipped","poseDetectionFrameInner","_callee3","g_keypoints","userPose","_context3","t0","estimateSinglePose","sent","push","estimateMultiplePoses","clearRect","save","translate","drawImage","restore","recordVideo","tracePose","toBlob","objectSpread","requestAnimationFrame","mobileNetArchitecture","e2","_this4","loadingText","style","fontSize","opacity","playsInline","ref","defaultProps","PoseNetReplay","_Component2","_getPrototypeOf3","_this5","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","loadedPoseRecords","loadedPoseVideo","loadData","handleFileRead","inherits","createClass","key","_this$props4","poseDrawFrame","_this$props5","_this$props6","poseVideo","_callee5","drawPoses","clrRange","clr","clrList","frame","url","_context5","src","onload","revokeObjectURL","drawPose","e","JSON","parse","fileReader","FileReader","onloadend","readAsText","target","files","_this6","_this$props7","additional_buttons","maxWidth","margin","display","onClick","stringify","_callee6","_context6","alert","padding","name","accept","backgroundColor","overflow","SliderScrubber_SliderScrubber","additionalOptions","App","recording","videoRecording","replay","front","multipose","mode","dims","hideInfo","onToggle","onToggleFrontCamera","onToggleVideoFeed","onTracePose","onTraceVideo","onToggleMultiPose","onStartRecord","onStopRecord","window","innerHeight","innerWidth","MainContent","Fragment","Posenet_PoseNetReplay","Posenet_PoseNetComponent","RecordToggles","justifyContent","InfoWarning","isRecordingEmpty","flexDirection","alignItems","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,eAAA,w8p1BCDlBF,EAAAC,QAAiBE,EAAAC,EAAuB,qDCCxCJ,EAAAC,QAAA,CAAkBI,IAAA,iBAAAC,WAAA,wBAAAC,WAAA,wBAAAC,YAAA,yBAAAC,OAAA,oBAAAC,QAAA,qBAAAC,WAAA,wBAAAC,QAAA,qBAAAC,aAAA,0BAAAC,kBAAA,uDAAAC,aAAA,0BAAAC,IAAA,iBAAAC,QAAA,oCAAAC,SAAA,gFCAlBlB,EAAAC,QAAA,CAAkBkB,QAAA,yBAAAC,QAAA,yBAAAC,SAAA,0BAAAC,OAAA,wBAAAC,kBAAA,mCAAAC,qBAAA,sCAAAC,UAAA,2BAAAC,YAAA,6BAAAC,iBAAA,kCAAAC,OAAA,wBAAAC,EAAA,mBAAAC,MAAA,wCAAAC,WAAA,kXCDX,SAASC,EAAgBC,GAC9B,IAAIC,EAAU,CACZC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,SAAU,UACVC,QAAS,UACTC,aAAc,UACdC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAGf,MAA4C,oBAAjC7I,EAAQD,EAAO+I,gBACjB9I,EAAQD,EAAO+I,eAa1B,IAAMC,EAAU,SAASC,GACvB,IAAMC,EAAS,4CAA4CC,KAAKF,GAChE,OAAOC,EACH,CACEE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,KAEtB,MAgCOG,EAA0B,WAAqB,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIN,EAAQM,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpDC,EAAQV,EAAQC,GAChBU,EAAQX,EAAQ,WAMtB,OAZgB,SAACM,GAA4B,IAArBM,EAAqBL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,EAAGM,EAAYN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACvC,OAAOO,OAAAC,EAAA,EAAAD,CAAIE,MAAMV,IAAQW,IAAI,SAACC,EAAGC,GAAJ,OAJrB,GADgBC,EAK8BD,EAAIb,IAAdO,EAJjBO,EAIsBR,EALtC,IAAaQ,IAYHC,CAAUf,GAAOW,IAAI,SAAAC,GAAC,MA/BzC,MACE,GAAK,MAHcI,EAUC,SAASC,EAAQC,EAAQC,GAC7ClB,UAAUC,OAAS,IACrBiB,EAAS,IAGX,IADA,IAAIvB,EAASqB,EAAOG,QACXP,EAAI,EAAGA,EAAI,EAAGA,IACrBjB,EAAOiB,GAAKQ,KAAKC,MAAM1B,EAAOiB,GAAKM,GAAUD,EAAOL,GAAKI,EAAOJ,KAElE,OAAOjB,EAgBG2B,CAAkBnB,EAAOC,EAAOO,IA/BtB,IAAM,KAAOI,EAAI,IAAM,GAAKA,EAAI,IAAIQ,SAAS,IAAIJ,MAAM,GAH7D,IAASJ,IAqCHS,mBCzMTC,EAAW,iBAJO,WAAWC,KAAKC,UAAUC,YAE9B,oBAAoBF,KAAKC,UAAUC,YAIjDC,EAAgB,SAC3BC,EACAC,EACAC,EACAC,GAEG,IADHC,EACGlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADK,EAER8B,EAAUK,QAAQ,SAAAC,GAChB,GAAIA,EAAS9L,OAASyL,EAAe,KAAAM,EAClBD,EAASE,SAAlBC,EAD2BF,EAC3BE,EAAGC,EADwBH,EACxBG,EACXP,EAAIQ,YACJR,EAAIS,IAAIF,EAAIN,EAAOK,EAAIL,EAAO,EAAG,EAAG,EAAId,KAAKuB,IAC7CV,EAAIW,UAAYZ,EAChBC,EAAIY,WAKJC,EAAU,SAAAC,GAAA,MAAc,CAAdA,EAAGR,EAAHQ,EAAMP,IAWTQ,EAAe,SAC1BlB,EACAC,EACAkB,EACAC,EACAjB,GAEG,IADHC,EACGlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADK,EAEkBpK,IACxBkM,EACAC,GAGgBI,QAAQ,SAAAL,IAtBR,SAAAqB,EAAAC,EAAqBH,EAAOC,EAAWhB,EAAOD,GAAQ,IAAAoB,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAA4C,EAAA,GAApDI,EAAoDF,EAAA,GAAhDG,EAAgDH,EAAA,GAAAI,EAAAlD,OAAA+C,EAAA,EAAA/C,CAAA6C,EAAA,GAA1CM,EAA0CD,EAAA,GAAtCE,EAAsCF,EAAA,GACxExB,EAAIQ,YACJR,EAAI2B,OAAOJ,EAAKtB,EAAOqB,EAAKrB,GAC5BD,EAAI4B,OAAOF,EAAKzB,EAAOwB,EAAKxB,GAC5BD,EAAIiB,UAAYA,EAChBjB,EAAI6B,YAAcb,EAClBhB,EAAI8B,SAiBFC,CACElB,EAAQhB,EAAU,GAAGQ,UACrBQ,EAAQhB,EAAU,GAAGQ,UACrBW,EACAC,EACAhB,EACAD,0CCjDegC,4NACnBC,MAAQ,CACNC,MAAO,CACL7D,IAAK,GACLD,IAAK,IAEP+D,SAAU,CACR9D,IAAK,GACLD,IAAK,GACLgE,KAAM,GAERC,MAAM,KAERC,cAAgBC,EAAKD,cAAcE,KAAnBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OAChBG,iBAAmBH,EAAKG,iBAAiBF,KAAtBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACnBI,SAAWJ,EAAKI,SAASH,KAAdlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,kFAEG7D,GACZ,IAAMkE,EAAO,CACXvE,IAAKK,EAAEL,IACPD,IAAKM,EAAEN,IACPgE,KAAM1D,EAAEN,IAAMM,EAAEL,KAElBwE,KAAKC,SAAS,CAAEX,SAAUS,6CAGXlE,GACf,GAAImE,KAAKZ,MAAME,SAAS9D,MAAQK,EAAEL,IAAK,CACrC,IAAMuE,EAAO,CACXvE,IAAKK,EAAEN,IAAMyE,KAAKZ,MAAME,SAASC,KACjChE,IAAKM,EAAEN,KAETyE,KAAKC,SAAS,CAAEZ,MAAOU,IAGrBC,KAAKE,MAAML,kBACbG,KAAKE,MAAML,iBAAiBhE,oCAIvBA,GACPmE,KAAKC,SAAS,CAAEZ,MAAOxD,IAEnBmE,KAAKE,MAAMJ,UACbE,KAAKE,MAAMJ,SAASjE,oCAIf,IACCsE,EAAUH,KAAKE,MAAfC,MAEF3E,EAAM2E,GAAQA,EAAM3E,KAAW,EAC/BD,EAAM4E,IAAQA,EAAM5E,KAAO4E,IAAe,IAEzC7D,KAAKd,IAAIc,KAAKf,IAAIyE,KAAKZ,MAAMC,MAAM7D,IAAKA,GAAMD,EAAM,IACpDe,KAAKd,IAAIwE,KAAKZ,MAAMC,MAAM9D,IAAKA,GAGtC,OACE6E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO5Q,gBACrBwQ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,gBAAc,EACdC,SAAUpF,EACVqF,SAAUpF,EACVsE,SAAUE,KAAKF,SACfL,cAAeO,KAAKP,cACpBI,iBAAkBG,KAAKH,iBACvBR,MAAOW,KAAKZ,MAAMC,gBAnEgBwB,cCM7B9P,EAZE,SACf+P,GAGG,IAFHC,EAEG7F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFQ,WACX8F,EACG9F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADW,aAEVmF,EAAIY,SAASX,cAAc,KAC3BY,EAAO,IAAIC,KAAK,CAACL,GAAU,CAAEM,KAAMJ,IACvCX,EAAEgB,KAAOC,IAAIC,gBAAgBL,GAC7Bb,EAAEtP,SAAWgQ,EACbV,EAAEmB,kBCLEC,EAAkB,CACtBC,QAAS,gBACTC,QAAS,gBACTC,KAAM,cAGKC,EAAS,eAAAxD,EAAA5C,OAAAqG,EAAA,EAAArG,CAAAsG,EAAA1B,EAAA2B,KAAG,SAAAC,EAAAhE,GAAA,IAAAyD,EAAAC,EAAAC,EAAAM,EAAA,OAAAH,EAAA1B,EAAA8B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAASZ,EAATzD,EAASyD,QAASC,EAAlB1D,EAAkB0D,QAASC,EAA3B3D,EAA2B2D,KAC5CM,EAAO,CAAER,UAASC,UAASC,QADVQ,EAAAG,OAAA,SAGhB,IAAIC,QAAQ,SAAAC,GACjBC,OAbe,kBADC,UAeiBR,GAAQT,EAb7B,8BAcTkB,KACC,SAAAC,GACEC,QAAQC,IAAI,WAAYF,EAASG,OAAQH,EAASI,MAClDP,GAAQ,IAEV,SAAAQ,GACEJ,QAAQC,IAAI,YAAaG,GACzBR,GAAQ,QAbO,wBAAAL,EAAAc,SAAAjB,EAAAjC,SAAH,gBAAAmD,GAAA,OAAA9E,EAAA+E,MAAApD,KAAA9E,YAAA,WCZTmI,EAAY,SAAAC,GACvB,IAAMC,EAAeD,EAAI1H,IAAI,SAAA4H,GAAG,OAAIlH,KAAKmH,IAAID,EAAK,KAAIE,OAAO,SAACrD,EAAGsD,GAAJ,OAAUtD,EAAIsD,IAE3E,OADYrH,KAAKsH,KAAKL,IAgBXM,EAAmB,SAACC,EAASC,GAGxC,OAfwB,SAACC,EAAMC,GAC/B,GAAID,EAAK7I,SAAW8I,EAAK9I,OACvB,MAAM,IAAI+I,MACR,gGAMJ,OAH6BF,EAC1BpI,IAAI,SAAC0H,EAAKxH,GAAN,OAAYwH,EAAMW,EAAKnI,KAC3B4H,OAAO,SAACrD,EAAGsD,GAAJ,OAAUtD,EAAIsD,IAMtBQ,CAAWL,EAASC,IAAYV,EAAUS,GAAWT,EAAUU,KCjBnE,SAASK,EAAM/E,EAAOgF,EAAMC,EAAOC,EAAMC,GACvC,OAAOD,GAASC,EAAQD,IAASlF,EAAQgF,IAAUC,EAAQD,GAI7D,IAiDMI,EAAgB,SAACC,GAAwC,IACzDC,EADuBC,IAAkC1J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAnB2J,IAAmB3J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAG7D,IAAKwJ,GAAwB,IAAhBA,EAAKvJ,OAAc,MAAO,GAGvC,IAAM6B,EAAY0H,EAAK1H,UAWvB,GAAI4H,EAAQ,KAAAE,EAlEc,SAAAJ,GAC1B,IAAM1H,EAAY0H,EAAK1H,UACjBU,EAAIV,EAAUpB,IAAI,SAAAC,GAAC,OAAIA,EAAE2B,SAASE,IAClCD,EAAIT,EAAUpB,IAAI,SAAAC,GAAC,OAAIA,EAAE2B,SAASC,IAKxC,MAAO,CAAEC,EAHOqH,YAAOrH,GAGFD,EAFLsH,YAAOtH,IA6DJuH,CAAoBN,GAA7BhH,EADEoH,EACFpH,EAAGD,EADDqH,EACCrH,EACLwH,EAAOvH,EAAE,GACTwH,EAAOxH,EAAE,GACTyH,EAAO1H,EAAE,GACT2H,EAAO3H,EAAE,GAGfkH,EAAW,GAAGU,OAAOjC,MACnB,GACApG,EAAUpB,IAAI,SAAAC,GAAC,MAAI,CACjBuI,EAAMvI,EAAE2B,SAASC,EAAG0H,EAAMC,EAAM,EAAG,GACnChB,EAAMvI,EAAE2B,SAASE,EAAGuH,EAAMC,EAAM,EAAG,YAIvCP,EAAW,GAAGU,OAAOjC,MACnB,GACApG,EAAUpB,IAAI,SAAAC,GAAC,MAAI,CAACA,EAAE2B,SAASC,EAAG5B,EAAE2B,SAASE,MAKjD,GAAImH,EAAS,CACX,IAAMS,EAAMX,EAASxJ,OACT,KAARmK,IACEA,EAAM,IACRzC,QAAQC,IAAR,6BAAAuC,OAAyCC,EAAzC,oBAEFX,EAAWA,EAAStI,MAAM,EAAG,KAIjC,OAAOsI,GAuEMY,EApES,SACtBC,EACAC,EACAC,GAIG,IAHHC,EAGGzK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHoB,EACvB0K,IAEG1K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GADH2K,EACG3K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADkB,EAGf4K,EAASrB,EAAce,GAAa,GAAM,GAG1CO,EArGiB,SACvBC,EACAC,GAGG,IAFHC,EAEGhL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFK,EACRiL,EACGjL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACGkL,EAAQJ,EAERK,EAAQ/J,KAAKC,MAAM2J,EAAQ,GAE3BI,EAAW3K,MAAM0K,GACpBtI,KAAKsI,GACLzK,IAAI,SAACC,EAAGC,GAAJ,OAAUQ,KAAKf,IAAI6K,EAAQtK,EAAG,KAE/ByK,EAAY5K,MAAMuK,EAAQG,GAC7BtI,KAAKmI,EAAQG,GACbzK,IAAI,SAACC,EAAGC,GAAJ,OAAUsK,EAAQ,EAAItK,IAEvB0K,EAAkB,GAAAnB,OAAA5J,OAAAC,EAAA,EAAAD,CAAI6K,GAAJ7K,OAAAC,EAAA,EAAAD,CAAiB8K,IAAWE,KAAK,SAACpG,EAAGsD,GAAJ,OAAUtD,EAAIsD,IAEvE,OAAIwC,EACKK,EAAgB5K,IAAI,SAACC,EAAGC,GAC7B,MAAO,CACL4K,SAAUpK,KAAKqK,IAAIP,EAAQvK,GAC3BuK,MAAOvK,EACP6I,KAAMuB,EAAQpK,MAIX2K,EAAgB5K,IAAI,SAAAC,GAAC,OAAIoK,EAAQpK,KAwEtB+K,CAClBnB,EACAC,EACAC,EACAC,GACAhK,IAAI,SAACC,EAAGC,GACR,IAAKD,EAAE6I,KACL,MAAO,CACLgC,SAAU,EACVlV,MAAO,EACPqS,iBAAkB,EAClBgD,mBAAoB,EACpBT,MAAOvK,EAAEuK,OAIb,IAAMU,EAAiBrC,EAAc5I,EAAE6I,MAAM,GAAM,GAC7CqC,EAA2BlL,EAAE6I,KAAKlT,MAClCwV,EAAyBnL,EAAE6K,SAC3BO,EAAsBpL,EAAEuK,MAGxBc,EAAarD,EAAiBiC,EAAQgB,GAAgBK,QAC1DtB,GAGIgB,EAAqBE,EAA2BG,EAKtD,MAAO,CACLR,SAAUM,EACVxV,MAJAqV,EAjCY,KAiCSG,EAKrBnD,iBAAkBqD,EAClBL,mBAAoBA,EACpBT,MAAOa,KAILG,EAAerB,EAClBnK,IAAI,SAAAC,GAAC,OAAIA,EAAErK,QACXiV,KAAK,SAACpG,EAAGsD,GAAJ,OAAUtD,EAAIsD,IACnBjH,UAAU,GACP2K,EAAoBtB,EAAYuB,OAAO,SAAAzL,GAAC,OAAmB,IAAfA,EAAE6K,WAAgB,GAAGlV,MAEvE,MAAO,CACLA,MAAO,CACL+V,WAAYjL,KAAKf,IAAI6I,EAAMgD,EAAc,IAAM,EAAK,EAAG,KAAM,GAC7DI,QAASJ,EACTK,QAASJ,EACTK,IAAK3B,KC5KE4B,EACL,UADKA,EAEA,mBCwBPC,UAAQC,EAAWC,aAEJC,6MAyBnB3I,MAAQ,CACNvO,SAAS,EACTmX,eAAgB,GAChBC,OAAQ,KACRC,MAAO,GACP/X,OAAQ,GACRgY,WAAY,EACZC,QAAQ,EACR5W,MAAO,EACPC,WAAY,EACZ4W,aAAc,KAEhBC,YAASlN,IACTmN,aAAUnN,IACVoN,UAAY,IACZC,WAAa/I,EAAK+I,WAAW9I,KAAhBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OA2DbgJ,UAAY,SAAAC,GACVjJ,EAAKkJ,OAASD,KAGhBE,SAAW,SAAAF,GACTjJ,EAAKoJ,MAAQH,6HA9DUI,EAAWC,iFAC9BD,IAAc/I,KAAKE,yBACjB6I,EAAUE,cAAgBjJ,KAAKE,MAAM+I,mCAEvCjJ,KAAKkJ,sBAEelJ,KAAKmJ,qBAAzBnJ,KAAKsI,cACLtI,KAAKoJ,cAELpJ,KAAKqJ,oBAILL,IAAchJ,KAAKZ,OACjB4J,EAAUxX,QAAUwO,KAAKZ,MAAM5N,OAA8B,IAArBwO,KAAKZ,MAAM5N,QACjDwO,KAAKuI,SAASe,aAAatJ,KAAKuI,SACpCvI,KAAKC,SAAS,CAAEoI,aAAc,IAC9BrI,KAAKuI,QAAUgB,WACb,kBAAMC,EAAKvJ,SAAS,CAAEoI,aAAc,KACpC,mJAQFrI,KAAKE,MAAMuJ,eACbzJ,KAAKE,MAAMuJ,cAAczJ,KAAKZ,MAAM4I,yDAMlChI,KAAKE,MAAMwJ,gBACb1J,KAAKE,MAAMwJ,eAAe1J,KAAKZ,MAAM8I,iDAKnClI,KAAKE,MAAMyJ,iBACb3J,KAAKE,MAAMyJ,gBAAgB3J,KAAKZ,MAAMjP,0CAIhCyZ,GACJ5J,KAAKE,MAAM2J,QACb7J,KAAKC,SAAS,CAAEiI,MAAK,GAAA7C,OAAA5J,OAAAC,EAAA,EAAAD,CAAMuE,KAAKZ,MAAM8I,OAAjBzM,OAAAC,EAAA,EAAAD,CAA2BmO,yCAIzCE,GACL9J,KAAKE,MAAM2J,QACb7J,KAAKC,SAAS,CAAE9P,OAAM,GAAAkV,OAAA5J,OAAAC,EAAA,EAAAD,CAAMuE,KAAKZ,MAAMjP,QAAjB,CAAyB2Z,2CAajD,IAAMC,EAAM/J,KAAKsI,OACbyB,IACaA,EAAIC,UACGC,YAGfrO,IAAI,SAAAsO,GAAC,OAAIA,EAAEhH,SAClBlD,KAAKsI,YAASlN,EACd4E,KAAKC,SAAS,CAAEpP,SAAS,EAAMqS,MAAM,2CAK3BlD,KAAKsI,OAEftI,KAAKC,SAAS,CAAEpP,SAAS,EAAOqS,MAAM,IAEtClD,KAAKkJ,kLAMFrM,UAAUsN,cAAiBtN,UAAUsN,aAAaC,mCAC/CC,EACJ,gEACFrK,KAAKC,SAAS,CAAE+H,eAAgBqC,IAC1BA,kBAG4BrK,KAAKE,MAAjCoK,eAAYC,gBACdzB,EAAQ9I,KAAK8I,MACb0B,EAAS7N,IACTsM,EAAcjJ,KAAKE,MAAM+I,YAE/BH,EAAM2B,MAAQH,EACdxB,EAAM4B,OAASH,YAGM1N,UAAUsN,aAAaC,aAAa,CACvDO,OAAO,EACP7B,MAAO,CACL8B,WAAY3B,EAAc,OAAS,CAAE4B,MAAO,eAC5CJ,MAAOD,OAAS,EAASF,EACzBI,OAAQF,OAAS,EAASD,oBALxBtC,SASNa,EAAMkB,UAAY/B,oBAEX,IAAIzF,QAAQ,SAAAC,GACjBqG,EAAMgC,iBAAmB,WAEvBhC,EAAMiC,OACNtI,EAAQqG,+IAKD,IAAAkC,EACyBhL,KAAKE,MAAjCoK,EADGU,EACHV,WAAYC,EADTS,EACST,YACd3B,EAAS5I,KAAK4I,OACdzL,EAAMyL,EAAOqC,WAAW,MAE9BrC,EAAO6B,MAAQH,EACf1B,EAAO8B,OAASH,EAEhBvK,KAAKkL,mBAAmB/N,8CAGPA,GAAK,IAAAgO,EAAAnL,KAAAoL,EAoBlBpL,KAAKE,MAlBPmL,EAFoBD,EAEpBC,UACAC,EAHoBF,EAGpBE,iBACAC,EAJoBH,EAIpBG,oBACAC,EALoBJ,EAKpBI,aACAC,EANoBL,EAMpBK,kBACAC,EAPoBN,EAOpBM,kBACAC,EARoBP,EAQpBO,kBACAC,EAToBR,EASpBQ,UACAtB,EAVoBc,EAUpBd,WACAC,EAXoBa,EAWpBb,YACAsB,EAZoBT,EAYpBS,UACAC,EAboBV,EAapBU,WACAC,EAdoBX,EAcpBW,aACA7O,EAfoBkO,EAepBlO,cACA8O,EAhBoBZ,EAgBpBY,WACAC,EAjBoBb,EAiBpBa,kBACAhD,EAlBoBmC,EAkBpBnC,YACA/F,EAnBoBkI,EAmBpBlI,KAGIgJ,EAAMlM,KAAKkM,IACXpD,EAAQ9I,KAAK8I,MACbqD,EAAUZ,KAEZtC,EAIEmD,EAAuB,eAAAnO,EAAAxC,OAAAqG,EAAA,EAAArG,CAAAsG,EAAA1B,EAAA2B,KAAG,SAAAqK,IAAA,IAAAzC,EAAAlF,EAAA4H,EAAAC,EAAArF,EAAA1V,EAAA,OAAAuQ,EAAA1B,EAAA8B,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,OAC1BsH,EAAQ,GADkB4C,EAAAC,GAGtBpB,EAHsBmB,EAAAlK,KAIvB,gBAJuBkK,EAAAC,GAAA,EAevB,eAfuBD,EAAAC,GAAA,yBAAAD,EAAAlK,KAAA,EAKP4J,EAAIQ,mBACrB5D,EACAwC,EACAa,EACAX,GATwB,cAKpB9G,EALoB8H,EAAAG,KAY1B/C,EAAMgD,KAAKlI,GAZe8H,EAAAjK,OAAA,0BAAAiK,EAAAlK,KAAA,GAgBZ4J,EAAIW,sBAChB/D,EACAwC,EACAa,EACAX,EACAE,EACAC,EACAC,GAvBwB,eAgB1BhC,EAhB0B4C,EAAAG,KAAAH,EAAAjK,OAAA,oBA6B9BpF,EAAI2P,UAAU,EAAG,EAAGxC,EAAYC,GAI5BsB,IACF1O,EAAI4P,OACAZ,IAEFhP,EAAIC,OAAO,EAAG,GACdD,EAAI6P,WAAW1C,EAAY,IAE7BnN,EAAI8P,UAAUnE,EAAO,EAAG,EAAGwB,EAAYC,GACvCpN,EAAI+P,WAKDtF,EAAMuD,EAAK/L,MAAM+I,cAIhBgD,EAAK/L,MAAMgJ,OAEb+C,EAAKlL,SAAS,CAAEkI,WAAY,IAG5BgD,EAAKlL,SAAS,CAAEkI,WAAY,EAAG1W,WAAY,KAGzC6a,EAAc1E,EAAMuD,EAAK/L,MAAM+I,YAAYnL,UACjC4K,EAAMuD,EAAK/L,MAAM+I,YAAY3W,OAE9Bia,IACTK,GACF/O,EAAcuP,EAAaX,EAAmBK,EAAY7O,GAExD4O,GACF7N,EACEoO,EACAX,EACAK,EACAC,EACA9O,IAUNyM,EAAMvM,QAAQ,SAAAgB,GAA0B,IAAvB7M,EAAuB6M,EAAvB7M,MAAOwL,EAAgBqB,EAAhBrB,UAClBxL,GAASia,IACPK,GACF/O,EAAcC,EAAW2O,EAAmBzO,EAAeC,GAEzD4O,GACF7N,EACElB,EACA2O,EACAzO,EACA+O,EACA9O,MAOFoP,EAAW3C,EAAM,GACjB1C,EAAa3B,EACjBgH,EACApB,EAAK/L,MAAM+I,WACXP,GAGIpW,EAAQuJ,SAASmM,EAAW1V,MAAM+V,WAAWJ,QAAQ,IAC3DgE,EAAKlL,SAAS,SAAAoC,GAAI,MAAK,CACrB7Q,MAAOA,EACPC,WAAY4Q,EAAK5Q,WAAaD,KAK5B0R,GAAQiI,EAAK/L,MAAM8D,OAASiI,EAAK7C,QACnCzF,QAAQC,IAAI,qBAEZ3F,EAAI2P,UAAU,EAAG,EAAGxC,EAAYC,KAI5BY,EAAKjL,MAAM2J,SACTsB,EAAKjL,MAAMiN,YACbtK,QAAQC,IAAI,8BAEZD,QAAQC,IAAI,qBAGdqI,EAAKiC,UAAUxD,GAEfuB,EAAKvC,OAAOyE,OAAOlC,EAAK1C,WAAY,aAAc,IAGlD0C,EAAKzB,iBACLyB,EAAKxB,mBAIPwB,EAAKlL,SAAS,SAAA+I,GAAS,OAAAvN,OAAA6R,EAAA,EAAA7R,CAAA,GAClBuN,EADkB,CAErBb,WAAYa,EAAUb,WAAa,MAErCoF,sBAAsBnB,IA9IM,yBAAAI,EAAAtJ,SAAAmJ,EAAArM,SAAH,yBAAA/B,EAAAmF,MAAApD,KAAA9E,YAAA,GAkJ7BkR,8KAIiBtb,IAAakP,KAAKE,MAAMsN,qCAAzCxN,KAAKkM,6BAKiBlM,KAAKmJ,qBAAzBnJ,KAAKsI,oEAECmF,EACJ,qFACFzN,KAAKC,SAAS,CAAE+H,eAAgByF,IAC1BA,2BAENzN,KAAKC,SAAS,CAAEpP,SAAS,yBAG3BmP,KAAKqJ,6KAILxG,QAAQC,IAAI,4BACZ9C,KAAKkJ,aACLlJ,KAAKC,SAAS,CAAEiD,MAAM,qCAGf,IAAAwK,EAAA1N,KACDnP,EAAUmP,KAAKZ,MAAMvO,QACzBuP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO3P,SACrBuP,EAAAC,EAAAC,cAAA,YAAON,KAAKE,MAAMyN,aAClBvN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMsN,MAAO,CAAEzP,MAAO,MAAO0P,SAAU,KACpC7N,KAAKZ,MAAM4I,iBAIhB,GAGFhI,KAAKyJ,gBAoBL,OACErJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO1P,SACrBsP,EAAAC,EAAAC,cApBU,WAGZ,OAFyB,IAArBoN,EAAKtO,MAAM5N,QAAakc,EAAKlF,UAAYkF,EAAKtO,MAAM5N,OAGtD4O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlP,QACrB8O,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAO/O,YAAaic,EAAKtO,MAAM3N,YAC7C2O,EAAAC,EAAAC,cAAA,KACEC,UAAWC,IAAOhP,MAClBoc,MAAO,CACLE,QAASJ,EAAKtO,MAAMiJ,eAGrBqF,EAAKlF,aAQV,MACC3X,EACDuP,EAAAC,EAAAC,cAAA,SAAOyN,aAAW,EAACC,IAAKhO,KAAK6I,WAE7BzI,EAAAC,EAAAC,cAAA,UAAQ0N,IAAKhO,KAAK0I,oBAraoB7H,aAAzBkH,EACZkG,aAAe,CACpB3D,WAAY,IACZC,YAAa,IACbc,UAAW,cACXmC,sBAAuB7Q,IAAa,GAAM,KAC1CkP,WAAW,EACXE,cAAc,EACdD,YAAY,EACZL,kBAAmB,GACnBE,kBAAmB,GACnBD,kBAAmB,GACnBE,UAAW,GACXJ,aAAc,GACdF,iBAAkB,GAClBpO,cAAe,OACf8O,WAAY,YACZC,kBAAmB,EACnB0B,YAAa,2BACb1E,aAAa,EACb/F,MAAM,EACN2G,QAAQ,EACRsD,aAAa,GAqZV,IAAMe,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA5S,OAAA6S,EAAA,EAAA7S,CAAAuE,KAAAkO,GAAA,QAAAK,EAAArT,UAAAC,OAAAqT,EAAA,IAAA7S,MAAA4S,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvT,UAAAuT,GAAA,OAAAJ,EAAA5S,OAAAiT,EAAA,EAAAjT,CAAAuE,MAAAoO,EAAA3S,OAAAkT,EAAA,EAAAlT,CAAAyS,IAAAU,KAAAxL,MAAAgL,EAAA,CAAApO,MAAAqF,OAAAmJ,MAwBEpP,MAAQ,CACNyP,kBAAmB,GACnBC,gBAAiB,IA1BrBT,EA8BEvO,SAAWuO,EAAKvO,SAASH,KAAdlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAA4S,KA9BbA,EA+BEU,SAAWV,EAAKU,SAASpP,KAAdlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAA4S,KA/BbA,EAgCEW,eAAiBX,EAAKW,eAAerP,KAApBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAA4S,KAhCnBA,EAkCE3F,UAAY,SAAAC,GACV0F,EAAKzF,OAASD,GAnClB0F,EAAA,OAAA5S,OAAAwT,EAAA,EAAAxT,CAAAyS,EAAAC,GAAA1S,OAAAyT,EAAA,EAAAzT,CAAAyS,EAAA,EAAAiB,IAAA,WAAA9P,MAAA,SAsCWc,GAAO,IAAAiP,EACsBpP,KAAKE,MAAjCoK,EADM8E,EACN9E,WAAYC,EADN6E,EACM7E,YACd3B,EAAS5I,KAAK4I,OACdzL,EAAMyL,EAAOqC,WAAW,MAE9BrC,EAAO6B,MAAQH,EACf1B,EAAO8B,OAASH,EAEhBvK,KAAKqP,cAAclS,EAAKgD,KA9C5B,CAAAgP,IAAA,gBAAA9P,MAAA,SAiDgBlC,EAAKgD,GAAO,IAAAmP,EAYpBtP,KAAKE,MAVPuL,EAFsB6D,EAEtB7D,kBACAE,EAHsB2D,EAGtB3D,kBACArB,EAJsBgF,EAItBhF,WACAC,EALsB+E,EAKtB/E,YACAuB,EANsBwD,EAMtBxD,WACAC,EAPsBuD,EAOtBvD,aACA7O,EARsBoS,EAQtBpS,cACA+O,EATsBqD,EAStBrD,kBACAJ,EAVsByD,EAUtBzD,UACAM,EAXsBmD,EAWtBnD,QAXsBoD,EAcSvP,KAAKE,MAAhC4H,EAdkByH,EAclBzH,YAAa0H,EAdKD,EAcLC,UAEQ,IAAvB1H,EAAY3M,QAAgB6E,KAAKZ,MAAMyP,kBAAkB1T,OAAS,IACpE2M,EAAc9H,KAAKZ,MAAMyP,mBAGF,IAArBW,EAAUrU,QAAgB6E,KAAKZ,MAAM0P,gBAAgB3T,OAAS,IAChEqU,EAAYxP,KAAKZ,MAAM0P,iBA0FzBvB,sBAvF6B,eAAAjP,EAAA7C,OAAAqG,EAAA,EAAArG,CAAAsG,EAAA1B,EAAA2B,KAAG,SAAAyN,IAAA,IAAAC,EAAA9F,EAAAd,EAAA6G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhO,EAAA1B,EAAA8B,KAAA,SAAA6N,GAAA,cAAAA,EAAA3N,KAAA2N,EAAA1N,MAAA,OACxBoN,EAAY,WAIhB9F,EAAMhO,IAAI,SAAA2C,EAAuBzC,GAAM,IAA1BtK,EAA0B+M,EAA1B/M,MAAOwL,EAAmBuB,EAAnBvB,UACdxL,GAASia,IACPK,GACF/O,EAAcC,EAAW2O,EAAmBkE,EAAQ/T,GAAIqB,GAEtD4O,GACF7N,EACElB,EACA2O,EACAkE,EAAQ/T,GACRmQ,EACA9O,OAONyM,EAAQ,GACZA,EAAQzJ,EAAQ2H,EAAYzL,MAAM8D,EAAM3E,IAAK2E,EAAM5E,KAAOuM,EAEtDgB,EAAQ,GAER3I,GACFyJ,EAAQ9B,EAAYzL,MAAM8D,EAAM3E,IAAK2E,EAAM5E,KAEvCiU,IACF1G,EAAQ0G,EAAUnT,MAAM8D,EAAM3E,IAAK2E,EAAM5E,QAG3CqO,EAAQ9B,EAEJ0H,IACF1G,EAAQ0G,IAGZ1G,EAAQA,EAAMA,EAAM3N,OAAS,GAEvBwU,EAAW/F,EAAMzO,OACnByU,EAAMle,EAAgBwL,IAAkB,WAEtC2S,EAAU7U,EAAwB2U,EAAUC,IAC1ClT,UAAU,GAAK,OACvBmT,EAAQnT,UAEJmP,GAAa2D,EAAUrU,OAAS,GAAKyO,EAAMzO,OAAS,GAEhD2U,EAAQ7O,SAASX,cAAc,OAC/ByP,EAAMzO,IAAIC,gBAAgBuH,GAEhCgH,EAAMG,IAAMF,EAOZD,EAAMI,OAAS,WAGb/S,EAAI2P,UAAU,EAAG,EAAGxC,EAAYC,GAEhCpN,EAAI4P,OACAZ,IAEFhP,EAAIC,OAAO,EAAG,GACdD,EAAI6P,WAAW1C,EAAY,IAE7BnN,EAAI8P,UAAU6C,EAAO,EAAG,EAAGxF,EAAYC,GACvCpN,EAAI+P,UAEJwC,IAEApO,IAAI6O,gBAAgBJ,MAItB5S,EAAI2P,UAAU,EAAG,EAAGxC,EAAYC,GAChCmF,KAnF4B,yBAAAM,EAAA9M,SAAAuM,EAAAzP,SAAH,yBAAA1B,EAAA8E,MAAApD,KAAA9E,YAAA,MAzEjC,CAAAiU,IAAA,oBAAA9P,MAAA,WAoKIW,KAAKoQ,aApKT,CAAAjB,IAAA,WAAA9P,MAAA,SAuKWc,GACPH,KAAKoQ,SAASjQ,KAxKlB,CAAAgP,IAAA,iBAAA9P,MAAA,SA2KiBgR,GACb,IAAMvP,EAAUwP,KAAKC,MAAMvQ,KAAKwQ,WAAW3V,QAC3CmF,KAAKC,SAAS,CACZ4O,kBAAmB/N,EAAQgH,aAAehH,GAAW,GACrDgO,gBAAiBhO,EAAQ0O,WAAa,OA/K5C,CAAAL,IAAA,WAAA9P,MAAA,SAmLWgR,GACPrQ,KAAKwQ,WAAa,IAAIC,WACtBzQ,KAAKwQ,WAAWE,UAAY1Q,KAAKgP,eAGjChP,KAAKwQ,WAAWG,WAAWN,EAAEO,OAAOC,MAAM,MAxL9C,CAAA1B,IAAA,SAAA9P,MAAA,WA2LW,IAAAyR,EAAA9Q,KAAA+Q,EAC0B/Q,KAAKE,MAAhC4H,EADCiJ,EACDjJ,YAAa0H,EADZuB,EACYvB,UAEQ,IAAvB1H,EAAY3M,QAAgB6E,KAAKZ,MAAMyP,kBAAkB1T,OAAS,IACpE2M,EAAc9H,KAAKZ,MAAMyP,mBAGF,IAArBW,EAAUrU,QAAgB6E,KAAKZ,MAAM0P,gBAAgB3T,OAAS,IAChEqU,EAAYxP,KAAKZ,MAAM0P,iBAGzB,IAAMkC,EACJ5Q,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtP,sBACrBkP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvP,mBACpB6W,EAAY3M,OAAS,EACpBiF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOzP,SAClB6c,MAAO,CACLqD,SAAU,IAEVC,OAAQ,SACRC,QAAS,SAGX/Q,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOxP,OAClBogB,QAAS,kBACPrgB,EACEuf,KAAKe,UAAU,CACbvJ,YAAaA,EACb0H,UAAW,KAEb,eARN,iBAeApP,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOxP,OAClBogB,QAAO3V,OAAAqG,EAAA,EAAArG,CAAAsG,EAAA1B,EAAA2B,KAAE,SAAAsP,IAAA,OAAAvP,EAAA1B,EAAA8B,KAAA,SAAAoP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,cAAAiP,EAAAjP,KAAA,EACDT,EAAU,CACdH,QAAS,eACTC,QAAS,2BACTC,KAAM,mBAJD,OAMP4P,MAAM,mBANC,wBAAAD,EAAArO,SAAAoO,EAAAtR,UAFX,kBAaAI,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOxP,OAClBogB,QAAS,WAGP,OAFAvO,QAAQC,IAAI,qBAELgO,EAAK7Q,SAAS,CACnB4O,kBAAmB,GACnBC,gBAAiB,OAPvB,gBAgBJ1O,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOzP,SAClB6c,MAAO,CAAEqD,SAAU,IAAKQ,QAAS,SAAUP,OAAQ,WAEnD9Q,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLsQ,KAAK,sBACLC,OAAO,QACP7R,SAAUE,KAAK+O,cAQ3B,OACE3O,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrP,WACrBiP,EAAAC,EAAAC,cAAA,OACEsN,MAAO,CACLgE,gBAAiB,UACjBX,SAAU,IACVY,SAAU,SACVnH,OAAQ,UAGVtK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ0N,IAAKhO,KAAK0I,cAItBtI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpP,aACrBgP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnP,kBACrB+O,EAAAC,EAAAC,cAACwR,EAAD,CAAUhS,SAAUE,KAAKF,SAAUK,MAAO2H,EAAY3M,WAQzD6E,KAAKE,MAAM6R,kBAAoBf,EAAqB,GAgBnD,QAzTV9C,EAAA,CAAmCrN,aAAtBqN,EACJD,aAAe,CACpB3D,WAAY,IACZC,YAAa,IACbc,UAAW,cACXmC,sBAAuB7Q,IAAa,GAAM,KAC1CkP,WAAW,EACXE,cAAc,EACdD,YAAY,EACZL,kBAAmB,GACnBE,kBAAmB,GACnBD,kBAAmB,EACnBE,UAAW,GACXJ,aAAc,GACdF,iBAAkB,GAClBpO,cAAe,OACf8O,WAAY,OACZC,kBAAmB,EACnB0B,YAAa,2BACb1E,aAAa,EACb/F,MAAM,EACN2G,QAAQ,EACRkI,mBAAmB,GChdvB,IA+OeC,6MA5Ob5S,MAAQ,CACN6S,UAAW,GACXC,eAAgB,GAChBC,QAAQ,EACRC,OAAO,EACPtJ,OAAO,EACPuJ,WAAW,EACXnP,MAAM,EACNoP,KAAM,SACNC,KAAM,GACNC,UAAU,KAEZC,SAAW/S,EAAK+S,SAAS9S,KAAdlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACXgT,oBAAsBhT,EAAKgT,oBAAoB/S,KAAzBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACtBiT,kBAAoBjT,EAAKiT,kBAAkBhT,KAAvBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACpBkT,YAAclT,EAAKkT,YAAYjT,KAAjBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACdmT,aAAenT,EAAKmT,aAAalT,KAAlBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACfoT,kBAAoBpT,EAAKoT,kBAAkBnT,KAAvBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OACpBqT,cAAgBrT,EAAKqT,cAAcpT,KAAnBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,OAChBsT,aAAetT,EAAKsT,aAAarT,KAAlBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAAiE,6EAEN2Q,GACPrQ,KAAKC,SAAS,CAAEkS,QAASnS,KAAKZ,MAAM+S,OAAQG,KAAMjC,kDAIlDrQ,KAAKC,SAAS,CAAEmS,OAAQpS,KAAKZ,MAAMgT,oDAInCpS,KAAKC,SAAS,CAAE6I,OAAQ9I,KAAKZ,MAAM0J,oDAInC9I,KAAKC,SAAS,CAAEoS,WAAYrS,KAAKZ,MAAMiT,gDAG7BhC,GACVrQ,KAAKC,SAAS,CAAEgS,UAAW5B,yCAGhBA,GAEXrQ,KAAKC,SAAS,CAAEiS,eAAgB7B,4CAIhCrQ,KAAKC,SAAS,CAAE4J,QAAQ,2CAIxB7J,KAAKC,SAAS,CAAE4J,QAAQ,gDAGN,IAAAL,EAAAxJ,KAClBA,KAAKC,SAAS,CACZyK,OAAQuI,OAAOC,YACfzI,MAAOnO,KAAKd,IAAIyX,OAAOE,WA5DX,OA8Dd5J,WAAW,kBAAMC,EAAKvJ,SAAS,CAAEuS,UAAU,KAAS,sCAG7C,IAAArH,EAAAnL,KA4CDoT,EACJhT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgT,SAAA,KACEjT,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOvQ,WAClB2d,MAAO,CAAEuD,QAA6B,WAApBnR,KAAKZ,MAAMkT,KAAoB,QAAU,SAE3DlS,EAAAC,EAAAC,cAACgT,EAAD,CACEhJ,WAAYtK,KAAKZ,MAAMqL,MACvBF,YAAavK,KAAKZ,MAAMsL,OACxB5C,YAAa9H,KAAKZ,MAAM6S,UACxBzC,UAAWxP,KAAKZ,MAAM8S,eACtBrG,WAAW,EACXkG,mBAAmB,KAGF,WAApB/R,KAAKZ,MAAMkT,KACVlS,EAAAC,EAAAC,cAACiT,EAAD,CACEjJ,WAAYtK,KAAKZ,MAAMqL,MACvBF,YAAavK,KAAKZ,MAAMsL,OACxB8C,sBAAuB,GACvBhC,aAAc,EACdmC,YAAa,aACb1E,YAAajJ,KAAKZ,MAAMgT,MACxB1I,eAAgB1J,KAAK4S,YACrBjJ,gBAAiB3J,KAAK6S,aACtBhH,UAAW7L,KAAKZ,MAAM0J,MACtBuC,UAAWrL,KAAKZ,MAAMiT,UAAY,aAAe,cACjDxI,OAAQ7J,KAAKZ,MAAMyK,OACnBsD,aAAW,IAGb,GAEmB,YAApBnN,KAAKZ,MAAMkT,KAAqBlS,EAAAC,EAAAC,cAAA,oBAAiB,IAIhDkT,EACJpT,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOlQ,QAClBsd,MAAO,CACLuD,QAAS,OACTsC,eAAgB,iBAGlBrT,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOjQ,aAClB6gB,QAASpR,KAAK0S,qBAEb1S,KAAKZ,MAAMgT,MAAQ,QAAU,OAJhC,WAMAhS,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOjQ,aAClB6gB,QAASpR,KAAK2S,mBAFhB,SAIS3S,KAAKZ,MAAM0J,MAAQ,KAAO,OAEnC1I,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOjQ,aAClB6gB,QAASpR,KAAK8S,mBAEb9S,KAAKZ,MAAMiT,UAAY,SAAW,UAJrC,QAMAjS,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAOjQ,aAAc6gB,QAASpR,KAAK+S,eAAtD,mBAGA3S,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAOhQ,kBAClB4gB,QAASpR,KAAKgT,cAFhB,mBASEU,EACJtT,EAAAC,EAAAC,cAAA,OACEsN,MAAO,CAAEuD,QAASnR,KAAKZ,MAAMoT,SAAW,OAAS,WACjDjS,UAAWC,IAAOnQ,YAElB+P,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpQ,SACrBgQ,EAAAC,EAAAC,cAAA,QACEsN,MAAO,CACLC,SAAU,GACV1P,MAAO,SAHX,gIAcAwV,EAAmD,IAAhC3T,KAAKZ,MAAM6S,UAAU9W,OAE9C,OACEiF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOzQ,KACrBqQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOxQ,YACrBoQ,EAAAC,EAAAC,cAAA,OACEC,UAAWC,IAAOrQ,OAClByd,MAAO,CACLzP,MAAOwV,EAAmB,MAAQhM,EAClCkG,SAAU,KAGZzN,EAAAC,EAAAC,cAAA,gCAAwBN,KAAKZ,MAAM6S,UAAU9W,SAG/CiF,EAAAC,EAAAC,cAAA,OACEsN,MAAO,CACLuD,QAA6B,WAApBnR,KAAKZ,MAAMkT,KAAoB,OAAS,OACjDsB,cAAe,SACfH,eAAgB,SAChBI,WAAY,WAGbL,EACAE,IAIJN,EACDhT,EAAAC,EAAAC,cAvKgB,kBAClBF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtQ,aACrBkQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO/P,cACrB2P,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAO7P,QAClBygB,QAAS,kBAAMjG,EAAKsH,SAAS,WAC7B7E,MAAO,CACL6D,QAAS,WACTG,gBACkC,IAAhCzG,EAAK/L,MAAM6S,UAAU9W,OAAewM,EAAmB,QACzDxJ,MAAuC,IAAhCgN,EAAK/L,MAAM6S,UAAU9W,OAAe,QAAU,UAPzD,uBAYAiF,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAO9P,IAClB0gB,QAAS,kBAAMjG,EAAKsH,SAAS,WAC7B7E,MAAO,CACL6D,QAAS,WACTG,gBACkC,IAAhCzG,EAAK/L,MAAM6S,UAAU9W,OAAewM,EAAc,QACpDxJ,MAAuC,IAAhCgN,EAAK/L,MAAM6S,UAAU9W,OAAe,QAAU,UAPzD,uBAYAiF,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAO5P,SAClBwgB,QAAS,kBAAMjG,EAAKsH,SAAS,YAC7B7E,MAAO,CACL6D,QAAS,WACTG,gBACkC,IAAhCzG,EAAK/L,MAAM6S,UAAU9W,OAAewM,EAAc,QACpDxJ,MAAuC,IAAhCgN,EAAK/L,MAAM6S,UAAU9W,OAAe,QAAU,UAPzD,2BA4IF,cAvOU0F,aCJEiT,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/T,EAAAC,EAAAC,cAAC8T,EAAD,MAASnT,SAASoT,eAAe,SD2H3C,kBAAmBxX,WACrBA,UAAUyX,cAAcC,MAAM5R,KAAK,SAAA6R,GACjCA,EAAaC","file":"static/js/main.bbe29a11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderScrubber\":\"SliderScrubber_sliderScrubber__2PdqC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2q9x4\",\"appContent\":\"App_appContent__1uhZF\",\"contentDiv\":\"App_contentDiv__2hIum\",\"modeButtons\":\"App_modeButtons__3SEgr\",\"frames\":\"App_frames__vi845\",\"warning\":\"App_warning__1RHk8\",\"warningDiv\":\"App_warningDiv__2taWY\",\"toggles\":\"App_toggles__1x73w\",\"toggleButton\":\"App_toggleButton__2MXSU\",\"toggleButtonRight\":\"App_toggleButtonRight__2MklE App_toggleButton__2MXSU\",\"btnContainer\":\"App_btnContainer__3AbS2\",\"btn\":\"App_btn__-YolR\",\"btnLeft\":\"App_btnLeft__1pgwK App_btn__-YolR\",\"btnRight\":\"App_btnRight__2vLku App_btn__-YolR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Posenet_loading__3_Gk5\",\"posenet\":\"Posenet_posenet__3mPFo\",\"download\":\"Posenet_download__3Ba3B\",\"button\":\"Posenet_button__SsefG\",\"contextualOptions\":\"Posenet_contextualOptions__3IWp1\",\"contextualOptionsDiv\":\"Posenet_contextualOptionsDiv__3A6kY\",\"replayDiv\":\"Posenet_replayDiv__3rekZ\",\"scrubberDiv\":\"Posenet_scrubberDiv__1y8W_\",\"scrubberInnerDiv\":\"Posenet_scrubberInnerDiv__3ywqU\",\"scores\":\"Posenet_scores__3KeYy\",\"s\":\"Posenet_s__2kQ9A\",\"score\":\"Posenet_score__21KTn Posenet_s__2kQ9A\",\"totalScore\":\"Posenet_totalScore__2HVwU Posenet_s__2kQ9A\"};","export function colourNameToHex(colour) {\n  var colours = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgrey: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370d8\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#d87093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  };\n\n  if (typeof colours[colour.toLowerCase()] != \"undefined\")\n    return colours[colour.toLowerCase()];\n\n  return false;\n}\n\nexport function decimalToHexString(number) {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n\n  return number.toString(16).toUpperCase();\n}\n\nconst hex2rgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgb2hex = function(rgb) {\n  return (\n    \"#\" +\n    ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  );\n};\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nconst _interpolateColor = function(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5;\n  }\n  let result = color1.slice();\n  for (var i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n};\n\nconst lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end;\n};\n\nconst makeRange = (steps, max = 1, min = 0) => {\n  return [...Array(steps)].map((v, i) => lerp(min, max, i / steps));\n};\n\nexport const getColorOpacityRangeHex = (steps = 20, hex) => {\n  const rgbIn = hex2rgb(hex);\n  const faded = hex2rgb(\"#333333\");\n\n  const interpolated = makeRange(steps).map(v =>\n    rgb2hex(_interpolateColor(rgbIn, faded, v))\n  );\n\n  return interpolated.reverse();\n};\n","import * as posenet from \"@tensorflow-models/posenet\";\n\nexport const isAndroid = () => /Android/i.test(navigator.userAgent);\n\nexport const isiOS = () => /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\nexport const isMobile = () => isAndroid() || isiOS();\n\nexport const drawKeypoints = (\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  ctx,\n  scale = 1\n) => {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      ctx.beginPath();\n      ctx.arc(x * scale, y * scale, 3, 0, 2 * Math.PI);\n      ctx.fillStyle = skeletonColor;\n      ctx.fill();\n    }\n  });\n};\n\nconst toTuple = ({ y, x }) => [y, x];\n\nconst drawSegment = ([ay, ax], [by, bx], color, lineWidth, scale, ctx) => {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawSkeleton = (\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  ctx,\n  scale = 1\n) => {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  );\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      ctx\n    );\n  });\n};\n\n// draw3dModel\n// exact same thing\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\n\n// styles\nimport styles from \"./index.module.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport \"./index.css\";\n\nexport default class SliderScrubber extends Component {\n  state = {\n    value: {\n      min: 10,\n      max: 20\n    },\n    valueOld: {\n      min: 10,\n      max: 20,\n      diff: 0\n    },\n    snap: true\n  };\n  onChangeStart = this.onChangeStart.bind(this);\n  onChangeComplete = this.onChangeComplete.bind(this);\n  onChange = this.onChange.bind(this);\n\n  onChangeStart(v) {\n    const vOut = {\n      min: v.min,\n      max: v.max,\n      diff: v.max - v.min\n    };\n    this.setState({ valueOld: vOut });\n  }\n\n  onChangeComplete(v) {\n    if (this.state.valueOld.min === v.min) {\n      const vOut = {\n        min: v.max - this.state.valueOld.diff,\n        max: v.max\n      };\n      this.setState({ value: vOut });\n    }\n\n    if (this.props.onChangeComplete) {\n      this.props.onChangeComplete(v);\n    }\n  }\n\n  onChange(v) {\n    this.setState({ value: v });\n\n    if (this.props.onChange) {\n      this.props.onChange(v);\n    }\n  }\n\n  render() {\n    const { range } = this.props;\n\n    const min = range ? range.min || 0 : 0;\n    const max = range ? range.max || range || 100 : 100;\n    const clampedValue = {\n      min: Math.min(Math.max(this.state.value.min, min), max - 20),\n      max: Math.min(this.state.value.max, max)\n    };\n\n    return (\n      <div className={styles.sliderScrubber}>\n        <InputRange\n          draggableTrack\n          maxValue={max}\n          minValue={min}\n          onChange={this.onChange}\n          onChangeStart={this.onChangeStart}\n          onChangeComplete={this.onChangeComplete}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nconst download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport default download;\n","import * as emailjs from \"emailjs-com\";\n\nconst TEMPLATE_ID = \"posenet\";\nconst SERVICE_ID = \"default_service\";\nconst USER_ID = \"user_ljTfIJFviZGfuGmui594C\";\n\nconst template_params = {\n  subject: \"subject_value\",\n  message: \"message_value\",\n  from: \"from_value\"\n};\n\nexport const sendEmail = async ({ subject, message, from }) => {\n  const data = { subject, message, from };\n\n  return new Promise(resolve => {\n    emailjs\n      .send(SERVICE_ID, TEMPLATE_ID, data || template_params, USER_ID)\n      .then(\n        response => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          resolve(true);\n        },\n        err => {\n          console.log(\"FAILED...\", err);\n          resolve(false);\n        }\n      );\n  });\n};\n\nexport const sendEmailWithAttachment = async ({ event }) => {\n  console.log(event);\n};\n","export const magnitude = vec => {\n  const squaredTotal = vec.map(num => Math.pow(num, 2)).reduce((a, b) => a + b); // sum of squares\n  const mag = Math.sqrt(squaredTotal); // squared root\n  return mag;\n};\n\nexport const dotProduct = (vec1, vec2) => {\n  if (vec1.length !== vec2.length) {\n    throw new Error(\n      \"vector lengths are not similar. please make sure vector 1 and vector 2 have the same length.\"\n    );\n  }\n  const sumOfMultiplications = vec1\n    .map((vec, i) => vec * vec2[i]) // multiply each scalar in the vector\n    .reduce((a, b) => a + b); // sum\n  return sumOfMultiplications;\n};\n\nexport const cosineSimilarity = (vector1, vector2) => {\n  const sim =\n    dotProduct(vector1, vector2) / (magnitude(vector1) * magnitude(vector2));\n  return sim;\n};\n","import { extent } from \"d3-array\";\nimport { cosineSimilarity } from \"./cosineSimilarity\";\n\nfunction remap(value, low1, high1, low2, high2) {\n  return low2 + ((high2 - low2) * (value - low1)) / (high1 - low1);\n}\n\n// find bounding box of pose\nconst calculatePoseDomain = pose => {\n  const keypoints = pose.keypoints;\n  const x = keypoints.map(v => v.position.x);\n  const y = keypoints.map(v => v.position.y);\n\n  const xDomain = extent(x);\n  const yDomain = extent(y);\n\n  return { x: xDomain, y: yDomain };\n};\n\n// return an array of poses with current pose in the middle of array\n// frameNumber == which point in time (of the poseSet) do you want to compare?\nconst findClosestPoses = (\n  frameNumber,\n  poseSet,\n  count = 5,\n  includeDist = false\n) => {\n  const index = frameNumber;\n  // find n closest poses compared to input pose and its index\n  const split = Math.round(count / 2);\n  // the first item in leftHalf is the current index\n  const leftHalf = Array(split)\n    .fill(split)\n    .map((v, i) => Math.max(index - i, 0));\n\n  const rightHalf = Array(count - split)\n    .fill(count - split)\n    .map((v, i) => index + 1 + i);\n\n  const closestNIndices = [...leftHalf, ...rightHalf].sort((a, b) => a - b);\n\n  if (includeDist) {\n    return closestNIndices.map((v, i) => {\n      return {\n        distance: Math.abs(index - v),\n        index: v,\n        pose: poseSet[v]\n      };\n    });\n  } else {\n    return closestNIndices.map(v => poseSet[v]);\n  }\n};\n\n// convert pose into vector,\n// option to resize to 0-1 for scoring\n// option to ensure vector is length 34 (for tfjs posenet)\nconst vectorizePose = (pose, resize = true, cleanup = true) => {\n  let arrayOut;\n\n  if (!pose || pose.length === 0) return [];\n\n  // maintain pose order\n  const keypoints = pose.keypoints;\n  // const keypoints = pose.keypoints.sort((a, b) => {\n  //   const x = a.part;\n  //   const y = b.part;\n\n  //   if (x < y) return -1;\n  //   if (x > y) return 1;\n  //   return 0;\n  // });\n\n  // resize == remap x and y to 0 to 1\n  if (resize) {\n    const { x, y } = calculatePoseDomain(pose);\n    const xMin = x[0];\n    const xMax = x[1];\n    const yMin = y[0];\n    const yMax = y[1];\n\n    //todo test this\n    arrayOut = [].concat.apply(\n      [],\n      keypoints.map(v => [\n        remap(v.position.y, yMin, yMax, 0, 1),\n        remap(v.position.x, xMin, xMax, 0, 1)\n      ])\n    );\n  } else {\n    arrayOut = [].concat.apply(\n      [],\n      keypoints.map(v => [v.position.y, v.position.x])\n    );\n  }\n\n  // ensure length === 34\n  if (cleanup) {\n    const len = arrayOut.length;\n    if (len !== 34) {\n      if (len < 34) {\n        console.log(`current keypoint count is ${len}. should be 34.`);\n      }\n      arrayOut = arrayOut.slice(0, 34);\n    }\n  }\n\n  return arrayOut;\n};\n\nconst scoreSimilarity = (\n  currentPose,\n  currentTimeFrame,\n  comparisonPoseSet,\n  compareNearestFrames = 5,\n  includeDistance = true,\n  accuracyInDecimals = 4\n) => {\n  const PENALTY = 0.001;\n  const c_Pose = vectorizePose(currentPose, true, true);\n\n  // score nearest n poses with current pose\n  const scoreFrames = findClosestPoses(\n    currentTimeFrame,\n    comparisonPoseSet,\n    compareNearestFrames,\n    includeDistance\n  ).map((v, i) => {\n    if (!v.pose) {\n      return {\n        distance: 1,\n        score: 0,\n        cosineSimilarity: 0,\n        weightedSimilarity: 0,\n        index: v.index\n      };\n    }\n\n    const comparisonPose = vectorizePose(v.pose, true, true);\n    const comparisonPoseConfidence = v.pose.score;\n    const comparisonPoseDistance = v.distance;\n    const comparisonPoseIndex = v.index;\n\n    // cosine similarity\n    const similarity = cosineSimilarity(c_Pose, comparisonPose).toFixed(\n      accuracyInDecimals\n    );\n    // penalize by accuracy/confidence\n    const weightedSimilarity = comparisonPoseConfidence * similarity;\n    // also penalize by how many frame did you lag behind\n    const finalSimilarity =\n      weightedSimilarity - comparisonPoseDistance * PENALTY;\n\n    return {\n      distance: comparisonPoseDistance,\n      score: finalSimilarity,\n      cosineSimilarity: similarity,\n      weightedSimilarity: weightedSimilarity,\n      index: comparisonPoseIndex\n    };\n  });\n\n  const highestScore = scoreFrames\n    .map(v => v.score)\n    .sort((a, b) => a - b)\n    .reverse()[0];\n  const currentFrameScore = scoreFrames.filter(v => v.distance === 0)[0].score;\n\n  return {\n    score: {\n      normalized: Math.max(remap(highestScore, 0.85, 1.0, 0, 100), 0),\n      highest: highestScore,\n      current: currentFrameScore,\n      all: scoreFrames\n    }\n  };\n};\n\nexport default scoreSimilarity;\n","export const DEBUG = false;\nexport const COLORS = {\n  main: \"#5FD49B\",\n  secondary: \"#FF8547\",\n  highlight: \"#BAFFFF\"\n};\n","// ref: https://github.com/jscriptcoder/tfjs-posenet/blob/master/src/PoseNet/index.jsx\n\n// main imports\nimport React, { Component } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Camera from \"react-html5-camera-photo\";\nimport ReactJson from \"react-json-tree\";\n\n// styles\nimport styles from \"./index.module.css\";\n// google theme\nimport { googleTheme } from \"./helpers/themes\";\nimport { colourNameToHex, getColorOpacityRangeHex } from \"./helpers/color\";\n\n// components\nimport { isMobile, drawKeypoints, drawSkeleton } from \"./utils\";\nimport Scrubber from \"./helpers/SliderScrubber\";\nimport download from \"./helpers/download\";\nimport { sendEmail } from \"./helpers/share\";\nimport scoreSimilarity from \"./helpers/scorer\";\n\n// constants\nimport { DEBUG } from \"../../lib/constants\";\n\n// ghost (the dance move you're competing with)\nimport GWARA_GIRL from \"./GWARA_GIRL.json\";\nimport GWARA_RAHMAT from \"./gwara-gwara-rahmat.json\";\nconst GHOST = GWARA_GIRL.poseRecords;\n\nexport default class PoseNetComponent extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 10,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    ghostColor: \"lightgrey\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: [],\n    ghostIndex: 0,\n    repeat: false,\n    score: 0,\n    totalScore: 0,\n    scoreOpacity: 0\n  };\n  camera = undefined;\n  timeout = undefined;\n  lastScore = 0;\n  traceVideo = this.traceVideo.bind(this);\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.frontCamera !== this.props.frontCamera) {\n        // stop existing camera\n        this.stopCamera();\n        // setup and start\n        this.camera = await this.setupCamera();\n        this.startCamera();\n        // detect pose\n        this.detectPose();\n      }\n    }\n\n    if (prevState !== this.state) {\n      if (prevState.score !== this.state.score && this.state.score !== 0) {\n        if (this.timeout) clearTimeout(this.timeout);\n        this.setState({ scoreOpacity: 1 });\n        this.timeout = setTimeout(\n          () => this.setState({ scoreOpacity: 0 }),\n          3000\n        );\n      }\n    }\n  }\n\n  errorMessages() {\n    // pipe out error messages\n    if (this.props.errorMessages) {\n      this.props.errorMessages(this.state.error_messages);\n    }\n  }\n\n  // the traced sequence\n  getPoseRecords() {\n    if (this.props.getPoseRecords) {\n      this.props.getPoseRecords(this.state.trace);\n    }\n  }\n\n  getVideoRecords() {\n    if (this.props.getVideoRecords) {\n      this.props.getVideoRecords(this.state.frames);\n    }\n  }\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  stopCamera() {\n    const cam = this.camera;\n    if (cam) {\n      const stream = cam.srcObject;\n      const tracks = stream.getTracks();\n\n      // stop all tracks\n      tracks.map(t => t.stop());\n      this.camera = undefined;\n      this.setState({ loading: true, stop: true });\n    }\n  }\n\n  startCamera() {\n    const cam = this.camera;\n    if (cam) {\n      this.setState({ loading: false, stop: false });\n    } else {\n      this.stopCamera();\n    }\n  }\n\n  async setupCamera() {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const { videoWidth, videoHeight } = this.props;\n    const video = this.video;\n    const mobile = isMobile();\n    const frontCamera = this.props.frontCamera;\n\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: frontCamera ? \"user\" : { exact: \"environment\" },\n        width: mobile ? void 0 : videoWidth,\n        height: mobile ? void 0 : videoHeight\n      }\n    });\n\n    video.srcObject = stream;\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        // Once the video metadata is ready, we can start streaming video\n        video.play();\n        resolve(video); // promise returns video\n      };\n    });\n  }\n\n  detectPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      ghostColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      // SHOW VIDEO FRAME\n      // ----------------\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // DRAW GWARA GIRL\n      // ---------------\n      if (!GHOST[this.state.ghostIndex]) {\n        // end of loop\n\n        // for now, repeat loop\n        if (this.state.repeat) {\n          // ENDLESS MODE FTW\n          this.setState({ ghostIndex: 0 });\n        } else {\n          // TODO: give user the score\n          this.setState({ ghostIndex: 0, totalScore: 0 });\n        }\n      }\n      const g_keypoints = GHOST[this.state.ghostIndex].keypoints;\n      const g_score = GHOST[this.state.ghostIndex].score;\n\n      if (g_score >= minPoseConfidence) {\n        if (showPoints) {\n          drawKeypoints(g_keypoints, minPartConfidence, ghostColor, ctx);\n        }\n        if (showSkeleton) {\n          drawSkeleton(\n            g_keypoints,\n            minPartConfidence,\n            ghostColor,\n            skeletonLineWidth,\n            ctx\n          );\n        }\n      }\n\n      // DRAW CURRENT PREDICTION\n      // -----------------------\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      // SCORE USER AGAINST GHOST\n      const userPose = poses[0];\n      const similarity = scoreSimilarity(\n        userPose,\n        this.state.ghostIndex, // TODO: change this\n        GHOST\n      );\n\n      const score = parseInt(similarity.score.normalized.toFixed(2));\n      this.setState(prev => ({\n        score: score,\n        totalScore: prev.totalScore + score\n      }));\n\n      // SHOW OUTPUT\n      // -----------\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            console.log(\"recording frame and video!\");\n          } else {\n            console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        this.setState(prevState => ({\n          ...prevState,\n          ghostIndex: prevState.ghostIndex + 1\n        }));\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async componentDidMount() {\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n    //console.log(\"loaded mobilenet\");\n    //console.log(this.net);\n\n    try {\n      this.camera = await this.setupCamera();\n    } catch (e) {\n      const e2 =\n        \"This browser does not support video capture, or this device does not have a camera\";\n      this.setState({ error_messages: e2 });\n      throw e2;\n    } finally {\n      this.setState({ loading: false });\n    }\n\n    this.detectPose();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounts!\");\n    this.stopCamera();\n    this.setState({ stop: true });\n  }\n\n  render() {\n    const loading = this.state.loading ? (\n      <div className={styles.loading}>\n        <code>{this.props.loadingText}</code>\n        <br />\n        <code style={{ color: \"red\", fontSize: 12 }}>\n          {this.state.error_messages}\n        </code>\n      </div>\n    ) : (\n      \"\"\n    );\n\n    this.errorMessages();\n\n    const Score = () => {\n      if (this.state.score !== 0) this.lastScore = this.state.score;\n\n      return (\n        <div className={styles.scores}>\n          <p className={styles.totalScore}>{this.state.totalScore}</p>\n          <p\n            className={styles.score}\n            style={{\n              opacity: this.state.scoreOpacity\n            }}\n          >\n            {this.lastScore}\n          </p>\n        </div>\n      );\n    };\n\n    return (\n      <div className={styles.posenet}>\n        <Score />\n        {loading}\n        <video playsInline ref={this.getVideo} />\n        {/* <Webcam ref={this.getVideo} /> */}\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n\nexport class PoseNetReplay extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    ghostColor: \"grey\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    additionalOptions: true\n  };\n  state = {\n    loadedPoseRecords: [],\n    loadedPoseVideo: []\n  };\n\n  fileReader;\n  onChange = this.onChange.bind(this);\n  loadData = this.loadData.bind(this);\n  handleFileRead = this.handleFileRead.bind(this);\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  drawPose(range) {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDrawFrame(ctx, range);\n  }\n\n  poseDrawFrame(ctx, range) {\n    const {\n      minPoseConfidence,\n      minPartConfidence,\n      videoWidth,\n      videoHeight,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      showVideo,\n      flipped\n    } = this.props;\n\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const poseDetectionFrameInner = async () => {\n      const drawPoses = () => {\n        // For each pose (i.e. person) detected in an image, loop through the poses\n        // and draw the resulting skeleton and keypoints if over certain confidence\n        // scores\n        poses.map(({ score, keypoints }, i) => {\n          if (score >= minPoseConfidence) {\n            if (showPoints) {\n              drawKeypoints(keypoints, minPartConfidence, clrList[i], ctx);\n            }\n            if (showSkeleton) {\n              drawSkeleton(\n                keypoints,\n                minPartConfidence,\n                clrList[i],\n                skeletonLineWidth,\n                ctx\n              );\n            }\n          }\n        });\n      };\n\n      let poses = [];\n      poses = range ? poseRecords.slice(range.min, range.max) : poseRecords;\n\n      let video = [];\n\n      if (range) {\n        poses = poseRecords.slice(range.min, range.max);\n\n        if (poseVideo) {\n          video = poseVideo.slice(range.min, range.max);\n        }\n      } else {\n        poses = poseRecords;\n\n        if (poseVideo) {\n          video = poseVideo;\n        }\n      }\n      video = video[video.length - 1];\n\n      const clrRange = poses.length;\n      let clr = colourNameToHex(skeletonColor) || \"#cccccc\";\n\n      const clrList = getColorOpacityRangeHex(clrRange, clr);\n      clrList.reverse()[0] = \"#fff\";\n      clrList.reverse();\n\n      if (showVideo && poseVideo.length > 1 && poses.length > 1) {\n        // turn blob into data\n        const frame = document.createElement(\"img\");\n        const url = URL.createObjectURL(video);\n\n        frame.src = url;\n\n        // temp draw\n        // frame.id = \"frame\";\n        // frame.height = 300;\n        // document.getElementById(\"frame\").replaceWith(frame);\n\n        frame.onload = () => {\n          // why? : https://stackoverflow.com/questions/12387310/html5-drawimage-works-in-firefox-not-chrome\n\n          ctx.clearRect(0, 0, videoWidth, videoHeight);\n          // draw\n          ctx.save();\n          if (flipped) {\n            // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n            ctx.scale(-1, 1);\n            ctx.translate(-videoWidth, 0);\n          }\n          ctx.drawImage(frame, 0, 0, videoWidth, videoHeight);\n          ctx.restore();\n\n          drawPoses();\n\n          URL.revokeObjectURL(url);\n        };\n      } else {\n        // no video\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n        drawPoses();\n      }\n    };\n\n    requestAnimationFrame(poseDetectionFrameInner);\n  }\n\n  componentDidMount() {\n    this.drawPose();\n  }\n\n  onChange(range) {\n    this.drawPose(range);\n  }\n\n  handleFileRead(e) {\n    const content = JSON.parse(this.fileReader.result);\n    this.setState({\n      loadedPoseRecords: content.poseRecords || content || [], // content is for backward compatibility\n      loadedPoseVideo: content.poseVideo || []\n    });\n  }\n\n  loadData(e) {\n    this.fileReader = new FileReader();\n    this.fileReader.onloadend = this.handleFileRead;\n\n    // run it\n    this.fileReader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const additional_buttons = (\n      <div className={styles.contextualOptionsDiv}>\n        <div className={styles.contextualOptions}>\n          {poseRecords.length > 1 ? (\n            <div>\n              <div\n                className={styles.download}\n                style={{\n                  maxWidth: 800,\n\n                  margin: \"0 auto\",\n                  display: \"flex\"\n                }}\n              >\n                <button\n                  className={styles.button}\n                  onClick={() =>\n                    download(\n                      JSON.stringify({\n                        poseRecords: poseRecords,\n                        poseVideo: []\n                      }),\n                      \"temp.json\"\n                    )\n                  }\n                >\n                  download data\n                </button>\n\n                <button\n                  className={styles.button}\n                  onClick={async () => {\n                    await sendEmail({\n                      subject: \"GWARA GWARA!\",\n                      message: \"I challenge you! GAWRRR!\",\n                      from: \"Rahmat Hidayat\"\n                    });\n                    alert(\"challenge sent!\");\n                  }}\n                >\n                  send challenge\n                </button>\n                <button\n                  className={styles.button}\n                  onClick={() => {\n                    console.log(\"clearing records!\");\n\n                    return this.setState({\n                      loadedPoseRecords: [],\n                      loadedPoseVideo: []\n                    });\n                  }}\n                >\n                  clear data\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              className={styles.download}\n              style={{ maxWidth: 800, padding: \"10px 0\", margin: \"0 auto\" }}\n            >\n              <input\n                type=\"file\"\n                name=\"pose records upload\"\n                accept=\".json\"\n                onChange={this.loadData}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    return (\n      <div className={styles.replayDiv}>\n        <div\n          style={{\n            backgroundColor: \"#050517\",\n            maxWidth: 800,\n            overflow: \"hidden\",\n            height: \"100vh\"\n          }}\n        >\n          <div>\n            <canvas ref={this.getCanvas} />\n          </div>\n        </div>\n\n        <div className={styles.scrubberDiv}>\n          <div className={styles.scrubberInnerDiv}>\n            <Scrubber onChange={this.onChange} range={poseRecords.length} />\n          </div>\n        </div>\n\n        {/* temporarily show image for debug */}\n        {/* <div style={{ height: 300 }}>\n          <div id=\"frame\" />\n        </div> */}\n        {this.props.additionalOptions ? additional_buttons : \"\"}\n\n        {DEBUG ? (\n          <div\n            style={{\n              height: \"100%\",\n              maxWidth: 800,\n              margin: \"3rem auto\",\n              textAlign: \"left\",\n              border: \"1px dashed lightgrey\",\n              padding: \"0 10px\"\n            }}\n          >\n            <ReactJson data={poseRecords} theme={googleTheme} />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n","// main imports\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n\n// styles\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\n\n// components\nimport PoseNet, { PoseNetReplay } from \"./components/Posenet\";\n\n// constants\nimport { COLORS } from \"./lib/constants\";\n\nconst MAX_WIDTH = 400;\n\nclass App extends Component {\n  state = {\n    recording: [],\n    videoRecording: [],\n    replay: false,\n    front: true,\n    video: true,\n    multipose: false,\n    stop: false,\n    mode: \"record\",\n    dims: {},\n    hideInfo: false\n  };\n  onToggle = this.onToggle.bind(this);\n  onToggleFrontCamera = this.onToggleFrontCamera.bind(this);\n  onToggleVideoFeed = this.onToggleVideoFeed.bind(this);\n  onTracePose = this.onTracePose.bind(this);\n  onTraceVideo = this.onTraceVideo.bind(this);\n  onToggleMultiPose = this.onToggleMultiPose.bind(this);\n  onStartRecord = this.onStartRecord.bind(this);\n  onStopRecord = this.onStopRecord.bind(this);\n\n  onToggle(e) {\n    this.setState({ replay: !this.state.replay, mode: e });\n  }\n\n  onToggleFrontCamera() {\n    this.setState({ front: !this.state.front });\n  }\n\n  onToggleVideoFeed() {\n    this.setState({ video: !this.state.video });\n  }\n\n  onToggleMultiPose() {\n    this.setState({ multipose: !this.state.multipose });\n  }\n\n  onTracePose(e) {\n    this.setState({ recording: e });\n  }\n\n  onTraceVideo(e) {\n    //console.log(\"tracing video\");\n    this.setState({ videoRecording: e });\n  }\n\n  onStartRecord() {\n    this.setState({ record: true });\n  }\n\n  onStopRecord() {\n    this.setState({ record: false });\n  }\n\n  componentDidMount() {\n    this.setState({\n      height: window.innerHeight,\n      width: Math.min(window.innerWidth, MAX_WIDTH)\n    });\n    setTimeout(() => this.setState({ hideInfo: true }), 20000);\n  }\n\n  render() {\n    const ModeButtons = () => (\n      <div className={styles.modeButtons}>\n        <div className={styles.btnContainer}>\n          <button\n            className={styles.btnLeft}\n            onClick={() => this.onToggle(\"record\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length === 0 ? COLORS.secondary : \"white\",\n              color: this.state.recording.length === 0 ? \"white\" : \"black\"\n            }}\n          >\n            RECORD 📹\n          </button>\n          <button\n            className={styles.btn}\n            onClick={() => this.onToggle(\"replay\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            REPLAY ▶️\n          </button>\n          <button\n            className={styles.btnRight}\n            onClick={() => this.onToggle(\"compete\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            COMPETE ⚔️\n          </button>\n        </div>\n      </div>\n    );\n\n    const MainContent = (\n      <>\n        <div\n          className={styles.contentDiv}\n          style={{ display: this.state.mode === \"replay\" ? \"block\" : \"none\" }}\n        >\n          <PoseNetReplay\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n            showVideo={true}\n            additionalOptions={true}\n          />\n        </div>\n        {this.state.mode === \"record\" ? (\n          <PoseNet\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            mobileNetArchitecture={0.5}\n            outputStride={8}\n            loadingText={\"Loading...\"}\n            frontCamera={this.state.front}\n            getPoseRecords={this.onTracePose}\n            getVideoRecords={this.onTraceVideo}\n            showVideo={this.state.video}\n            algorithm={this.state.multipose ? \"multi-pose\" : \"single-pose\"}\n            record={this.state.record}\n            recordVideo\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.mode === \"compete\" ? <p>compete</p> : \"\"}\n      </>\n    );\n\n    const RecordToggles = (\n      <div\n        className={styles.toggles}\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        }}\n      >\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleFrontCamera}\n        >\n          {this.state.front ? \"front\" : \"rear\"} camera\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleVideoFeed}\n        >\n          video {this.state.video ? \"on\" : \"off\"}\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleMultiPose}\n        >\n          {this.state.multipose ? \"multi-\" : \"single \"}pose\n        </button>\n        <button className={styles.toggleButton} onClick={this.onStartRecord}>\n          start recording\n        </button>\n        <button\n          className={styles.toggleButtonRight}\n          onClick={this.onStopRecord}\n        >\n          stop recording\n        </button>\n      </div>\n    );\n\n    const InfoWarning = (\n      <div\n        style={{ display: this.state.hideInfo ? \"none\" : \"initial\" }}\n        className={styles.warningDiv}\n      >\n        <div className={styles.warning}>\n          <code\n            style={{\n              fontSize: 10,\n              color: \"grey\"\n            }}\n          >\n            {/* and single/multipose toggles */}* video on/off toggle doesn't\n            seem to work while camera is already running. please toggle between\n            cameras to make it work.\n          </code>\n        </div>\n      </div>\n    );\n\n    const isRecordingEmpty = this.state.recording.length === 0;\n\n    return (\n      <div className={styles.app}>\n        <div className={styles.appContent}>\n          <div\n            className={styles.frames}\n            style={{\n              color: isRecordingEmpty ? \"red\" : COLORS.secondary,\n              fontSize: 15\n            }}\n          >\n            <code>recorded frames: {this.state.recording.length}</code>\n          </div>\n\n          <div\n            style={{\n              display: this.state.mode === \"record\" ? \"flex\" : \"none\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            {RecordToggles}\n            {InfoWarning}\n          </div>\n        </div>\n\n        {MainContent}\n        <ModeButtons />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}