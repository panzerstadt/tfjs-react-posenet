{"version":3,"sources":["components/Posenet/helpers/SliderScrubber/index.module.css","logo.svg","components/Posenet/index.module.css","components/Posenet/helpers/color.js","components/Posenet/utils.js","components/Posenet/helpers/SliderScrubber/index.js","components/Posenet/helpers/download.js","components/Posenet/helpers/share.js","lib/constants.js","components/Posenet/index.js","App.js","serviceWorker.js","index.js","App.module.css"],"names":["module","exports","sliderScrubber","__webpack_require__","p","loading","posenet","download","button","colourNameToHex","colour","colours","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred ","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","toLowerCase","hex2rgb","hex","result","exec","parseInt","getColorOpacityRangeHex","steps","arguments","length","undefined","rgbIn","faded","max","min","Object","toConsumableArray","Array","map","v","i","amt","makeRange","rgb","color1","color2","factor","slice","Math","round","_interpolateColor","toString","reverse","isMobile","test","navigator","userAgent","drawKeypoints","keypoints","minConfidence","skeletonColor","ctx","scale","forEach","keypoint","score","_keypoint$position","position","y","x","beginPath","arc","PI","fillStyle","fill","toTuple","_ref","drawSkeleton","color","lineWidth","_ref2","_ref3","_ref4","slicedToArray","ay","ax","_ref5","by","bx","moveTo","lineTo","strokeStyle","stroke","drawSegment","SliderScrubber","state","value","onChangeComplete","_this","bind","assertThisInitialized","onChange","this","props","setState","range","clampedValue","react_default","a","createElement","className","styles","js_default","draggableTrack","maxValue","minValue","Component","content","fileName","contentType","document","file","Blob","type","href","URL","createObjectURL","click","template_params","subject","message","from","sendEmail","asyncToGenerator","regenerator_default","mark","_callee","data","wrap","_context","prev","next","abrupt","Promise","resolve","emailjs","then","response","console","log","status","text","err","stop","_x","apply","COLORS","PoseNetComponent","error_messages","stream","trace","frames","camera","traceVideo","getCanvas","elem","canvas","getVideo","video","prevProps","prevState","frontCamera","stopCamera","setupCamera","startCamera","detectPose","errorMessages","getPoseRecords","getVideoRecords","poses","record","concat","blob","cam","srcObject","getTracks","t","mediaDevices","getUserMedia","e1","videoWidth","videoHeight","mobile","width","height","audio","facingMode","exact","onloadedmetadata","play","_this$props2","getContext","poseDetectionFrame","_this2","_this$props3","algorithm","imageScaleFactor","forceFlipHorizontal","outputStride","minPoseConfidence","maxPoseDetections","minPartConfidence","nmsRadius","showVideo","showPoints","showSkeleton","skeletonLineWidth","net","flipped","poseDetectionFrameInner","_callee3","pose","_context3","t0","estimateSinglePose","sent","push","estimateMultiplePoses","clearRect","save","translate","drawImage","restore","recordVideo","tracePose","toBlob","requestAnimationFrame","mobileNetArchitecture","e2","loadingText","style","fontSize","playsInline","ref","defaultProps","PoseNetReplay","_Component2","_getPrototypeOf3","_this3","classCallCheck","_len2","args","_key2","possibleConstructorReturn","getPrototypeOf","call","loadedPoseRecords","loadedPoseVideo","loadData","handleFileRead","inherits","createClass","key","_this$props4","poseDrawFrame","_this$props5","_this$props6","poseRecords","poseVideo","_callee5","drawPoses","clrRange","clr","clrList","frame","url","_context5","src","onload","revokeObjectURL","drawPose","e","JSON","parse","fileReader","FileReader","onloadend","readAsText","target","files","_this4","_this$props7","backgroundColor","maxWidth","overflow","SliderScrubber_SliderScrubber","margin","display","onClick","stringify","_callee6","_context6","alert","padding","name","accept","PoseNetMatch","_Component3","_getPrototypeOf4","_this5","_len3","_key3","h","w","_this$state","_this6","_this$props8","_ref6","_callee7","_context7","_ref7","_onCameraStart","_callee8","track","_context8","getVideoTracks","getSettings","setDims","onStream","_x3","window","innerWidth","innerHeight","build_default","App","recording","videoRecording","replay","front","multipose","mode","dims","hideInfo","onToggle","onToggleFrontCamera","onToggleVideoFeed","onTracePose","onTraceVideo","onToggleMultiPose","onStartRecord","onStopRecord","setTimeout","MainContent","Fragment","contentDiv","Posenet_PoseNetReplay","Posenet_PoseNetComponent","Posenet_PoseNetMatch","RecordToggles","toggles","justifyContent","toggleButton","toggleButtonRight","InfoWarning","warning","isRecordingEmpty","app","flexDirection","alignItems","modeButtons","btnContainer","btnLeft","btn","btnRight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92efd8ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderScrubber\":\"SliderScrubber_sliderScrubber__2PdqC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Posenet_loading__3_Gk5\",\"posenet\":\"Posenet_posenet__3mPFo\",\"download\":\"Posenet_download__3Ba3B\",\"button\":\"Posenet_button__SsefG\"};","export function colourNameToHex(colour) {\n  var colours = {\n    aliceblue: \"#f0f8ff\",\n    antiquewhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedalmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueviolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlywood: \"#deb887\",\n    cadetblue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerblue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkblue: \"#00008b\",\n    darkcyan: \"#008b8b\",\n    darkgoldenrod: \"#b8860b\",\n    darkgray: \"#a9a9a9\",\n    darkgreen: \"#006400\",\n    darkkhaki: \"#bdb76b\",\n    darkmagenta: \"#8b008b\",\n    darkolivegreen: \"#556b2f\",\n    darkorange: \"#ff8c00\",\n    darkorchid: \"#9932cc\",\n    darkred: \"#8b0000\",\n    darksalmon: \"#e9967a\",\n    darkseagreen: \"#8fbc8f\",\n    darkslateblue: \"#483d8b\",\n    darkslategray: \"#2f4f4f\",\n    darkturquoise: \"#00ced1\",\n    darkviolet: \"#9400d3\",\n    deeppink: \"#ff1493\",\n    deepskyblue: \"#00bfff\",\n    dimgray: \"#696969\",\n    dodgerblue: \"#1e90ff\",\n    firebrick: \"#b22222\",\n    floralwhite: \"#fffaf0\",\n    forestgreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#dcdcdc\",\n    ghostwhite: \"#f8f8ff\",\n    gold: \"#ffd700\",\n    goldenrod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenyellow: \"#adff2f\",\n    honeydew: \"#f0fff0\",\n    hotpink: \"#ff69b4\",\n    \"indianred \": \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderblush: \"#fff0f5\",\n    lawngreen: \"#7cfc00\",\n    lemonchiffon: \"#fffacd\",\n    lightblue: \"#add8e6\",\n    lightcoral: \"#f08080\",\n    lightcyan: \"#e0ffff\",\n    lightgoldenrodyellow: \"#fafad2\",\n    lightgrey: \"#d3d3d3\",\n    lightgreen: \"#90ee90\",\n    lightpink: \"#ffb6c1\",\n    lightsalmon: \"#ffa07a\",\n    lightseagreen: \"#20b2aa\",\n    lightskyblue: \"#87cefa\",\n    lightslategray: \"#778899\",\n    lightsteelblue: \"#b0c4de\",\n    lightyellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limegreen: \"#32cd32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumaquamarine: \"#66cdaa\",\n    mediumblue: \"#0000cd\",\n    mediumorchid: \"#ba55d3\",\n    mediumpurple: \"#9370d8\",\n    mediumseagreen: \"#3cb371\",\n    mediumslateblue: \"#7b68ee\",\n    mediumspringgreen: \"#00fa9a\",\n    mediumturquoise: \"#48d1cc\",\n    mediumvioletred: \"#c71585\",\n    midnightblue: \"#191970\",\n    mintcream: \"#f5fffa\",\n    mistyrose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajowhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldlace: \"#fdf5e6\",\n    olive: \"#808000\",\n    olivedrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangered: \"#ff4500\",\n    orchid: \"#da70d6\",\n    palegoldenrod: \"#eee8aa\",\n    palegreen: \"#98fb98\",\n    paleturquoise: \"#afeeee\",\n    palevioletred: \"#d87093\",\n    papayawhip: \"#ffefd5\",\n    peachpuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderblue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccapurple: \"#663399\",\n    red: \"#ff0000\",\n    rosybrown: \"#bc8f8f\",\n    royalblue: \"#4169e1\",\n    saddlebrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandybrown: \"#f4a460\",\n    seagreen: \"#2e8b57\",\n    seashell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    skyblue: \"#87ceeb\",\n    slateblue: \"#6a5acd\",\n    slategray: \"#708090\",\n    snow: \"#fffafa\",\n    springgreen: \"#00ff7f\",\n    steelblue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whitesmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowgreen: \"#9acd32\"\n  };\n\n  if (typeof colours[colour.toLowerCase()] != \"undefined\")\n    return colours[colour.toLowerCase()];\n\n  return false;\n}\n\nexport function decimalToHexString(number) {\n  if (number < 0) {\n    number = 0xffffffff + number + 1;\n  }\n\n  return number.toString(16).toUpperCase();\n}\n\nconst hex2rgb = function(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgb2hex = function(rgb) {\n  return (\n    \"#\" +\n    ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  );\n};\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nconst _interpolateColor = function(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5;\n  }\n  let result = color1.slice();\n  for (var i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n};\n\nconst lerp = (start, end, amt) => {\n  return (1 - amt) * start + amt * end;\n};\n\nconst makeRange = (steps, max = 1, min = 0) => {\n  return [...Array(steps)].map((v, i) => lerp(min, max, i / steps));\n};\n\nexport const getColorOpacityRangeHex = (steps = 20, hex) => {\n  const rgbIn = hex2rgb(hex);\n  const faded = hex2rgb(\"#333333\");\n\n  const interpolated = makeRange(steps).map(v =>\n    rgb2hex(_interpolateColor(rgbIn, faded, v))\n  );\n\n  return interpolated.reverse();\n};\n","import * as posenet from \"@tensorflow-models/posenet\";\n\nexport const isAndroid = () => /Android/i.test(navigator.userAgent);\n\nexport const isiOS = () => /iPhone|iPad|iPod/i.test(navigator.userAgent);\n\nexport const isMobile = () => isAndroid() || isiOS();\n\nexport const drawKeypoints = (\n  keypoints,\n  minConfidence,\n  skeletonColor,\n  ctx,\n  scale = 1\n) => {\n  keypoints.forEach(keypoint => {\n    if (keypoint.score >= minConfidence) {\n      const { y, x } = keypoint.position;\n      ctx.beginPath();\n      ctx.arc(x * scale, y * scale, 3, 0, 2 * Math.PI);\n      ctx.fillStyle = skeletonColor;\n      ctx.fill();\n    }\n  });\n};\n\nconst toTuple = ({ y, x }) => [y, x];\n\nconst drawSegment = ([ay, ax], [by, bx], color, lineWidth, scale, ctx) => {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n};\n\nexport const drawSkeleton = (\n  keypoints,\n  minConfidence,\n  color,\n  lineWidth,\n  ctx,\n  scale = 1\n) => {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints,\n    minConfidence\n  );\n\n  adjacentKeyPoints.forEach(keypoints => {\n    drawSegment(\n      toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position),\n      color,\n      lineWidth,\n      scale,\n      ctx\n    );\n  });\n};\n\n// draw3dModel\n// exact same thing\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\n\n// styles\nimport styles from \"./index.module.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport \"./index.css\";\n\nexport default class SliderScrubber extends Component {\n  state = {\n    value: {\n      min: 10,\n      max: 50\n    }\n  };\n  onChangeComplete = this.onChangeComplete.bind(this);\n  onChange = this.onChange.bind(this);\n\n  onChangeComplete(v) {\n    if (this.props.onChangeComplete) {\n      this.props.onChangeComplete(v);\n    }\n  }\n\n  onChange(v) {\n    this.setState({ value: v });\n\n    if (this.props.onChange) {\n      this.props.onChange(v);\n    }\n  }\n\n  render() {\n    const { range } = this.props;\n\n    const min = range ? range.min || 0 : 0;\n    const max = range ? range.max || range || 100 : 100;\n    const clampedValue = {\n      min: Math.min(Math.max(this.state.value.min, min), max - 20),\n      max: Math.min(this.state.value.max, max)\n    };\n\n    return (\n      <div className={styles.sliderScrubber}>\n        <InputRange\n          draggableTrack\n          maxValue={max}\n          minValue={min}\n          onChange={this.onChange}\n          onChangeComplete={this.onChangeComplete}\n          value={clampedValue}\n        />\n      </div>\n    );\n  }\n}\n","//https://stackoverflow.com/questions/34156282/how-do-i-save-json-to-local-text-file\n\nconst download = (\n  content,\n  fileName = \"json.txt\",\n  contentType = \"text/plain\"\n) => {\n  let a = document.createElement(\"a\");\n  let file = new Blob([content], { type: contentType });\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n};\n\nexport default download;\n","import * as emailjs from \"emailjs-com\";\n\nconst TEMPLATE_ID = \"posenet\";\nconst SERVICE_ID = \"default_service\";\nconst USER_ID = \"user_ljTfIJFviZGfuGmui594C\";\n\nconst template_params = {\n  subject: \"subject_value\",\n  message: \"message_value\",\n  from: \"from_value\"\n};\n\nexport const sendEmail = async ({ subject, message, from }) => {\n  const data = { subject, message, from };\n\n  return new Promise(resolve => {\n    emailjs\n      .send(SERVICE_ID, TEMPLATE_ID, data || template_params, USER_ID)\n      .then(\n        response => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          resolve(true);\n        },\n        err => {\n          console.log(\"FAILED...\", err);\n          resolve(false);\n        }\n      );\n  });\n};\n\nexport const sendEmailWithAttachment = async ({ event }) => {\n  console.log(event);\n};\n","export const DEBUG = false;\nexport const COLORS = {\n  main: \"#5FD49B\",\n  secondary: \"#FF8547\",\n  highlight: \"#BAFFFF\"\n};\n","// ref: https://github.com/jscriptcoder/tfjs-posenet/blob/master/src/PoseNet/index.jsx\n\n// main imports\nimport React, { Component } from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Camera from \"react-html5-camera-photo\";\nimport ReactJson from \"react-json-tree\";\n\n// styles\nimport styles from \"./index.module.css\";\n// google theme\nimport { googleTheme } from \"./helpers/themes\";\nimport { colourNameToHex, getColorOpacityRangeHex } from \"./helpers/color\";\n\n// components\nimport { isMobile, drawKeypoints, drawSkeleton } from \"./utils\";\nimport Scrubber from \"./helpers/SliderScrubber\";\nimport download from \"./helpers/download\";\nimport { sendEmail } from \"./helpers/share\";\n\n// constants\nimport { DEBUG } from \"../../lib/constants\";\n\nexport default class PoseNetComponent extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: []\n  };\n  camera = undefined;\n  traceVideo = this.traceVideo.bind(this);\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.frontCamera !== this.props.frontCamera) {\n        // stop existing camera\n        this.stopCamera();\n        // setup and start\n        this.camera = await this.setupCamera();\n        this.startCamera();\n        // detect pose\n        this.detectPose();\n      }\n    }\n  }\n\n  errorMessages() {\n    // pipe out error messages\n    if (this.props.errorMessages) {\n      this.props.errorMessages(this.state.error_messages);\n    }\n  }\n\n  // the traced sequence\n  getPoseRecords() {\n    if (this.props.getPoseRecords) {\n      this.props.getPoseRecords(this.state.trace);\n    }\n  }\n\n  getVideoRecords() {\n    if (this.props.getVideoRecords) {\n      this.props.getVideoRecords(this.state.frames);\n    }\n  }\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  stopCamera() {\n    const cam = this.camera;\n    if (cam) {\n      const stream = cam.srcObject;\n      const tracks = stream.getTracks();\n\n      // stop all tracks\n      tracks.map(t => t.stop());\n      this.camera = undefined;\n      this.setState({ loading: true, stop: true });\n    }\n  }\n\n  startCamera() {\n    const cam = this.camera;\n    if (cam) {\n      this.setState({ loading: false, stop: false });\n    } else {\n      this.stopCamera();\n    }\n  }\n\n  async setupCamera() {\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      const e1 =\n        \"Browser API navigator.mediaDevices.getUserMedia not available\";\n      this.setState({ error_messages: e1 });\n      throw e1;\n    }\n\n    const { videoWidth, videoHeight } = this.props;\n    const video = this.video;\n    const mobile = isMobile();\n    const frontCamera = this.props.frontCamera;\n\n    video.width = videoWidth;\n    video.height = videoHeight;\n\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: frontCamera ? \"user\" : { exact: \"environment\" },\n        width: mobile ? void 0 : videoWidth,\n        height: mobile ? void 0 : videoHeight\n      }\n    });\n\n    video.srcObject = stream;\n\n    return new Promise(resolve => {\n      video.onloadedmetadata = () => {\n        // Once the video metadata is ready, we can start streaming video\n        video.play();\n        resolve(video); // promise returns video\n      };\n    });\n  }\n\n  detectPose() {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            console.log(\"recording frame and video!\");\n          } else {\n            console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async componentDidMount() {\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n    console.log(\"loaded mobilenet\");\n    console.log(this.net);\n\n    try {\n      this.camera = await this.setupCamera();\n    } catch (e) {\n      const e2 =\n        \"This browser does not support video capture, or this device does not have a camera\";\n      this.setState({ error_messages: e2 });\n      throw e2;\n    } finally {\n      this.setState({ loading: false });\n    }\n\n    this.detectPose();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmounts!\");\n    this.stopCamera();\n    this.setState({ stop: true });\n  }\n\n  render() {\n    const loading = this.state.loading ? (\n      <div className={styles.loading}>\n        <code>{this.props.loadingText}</code>\n        <br />\n        <code style={{ color: \"red\", fontSize: 12 }}>\n          {this.state.error_messages}\n        </code>\n      </div>\n    ) : (\n      \"\"\n    );\n\n    this.errorMessages();\n\n    return (\n      <div className={styles.posenet}>\n        {loading}\n        <video playsInline ref={this.getVideo} />\n        {/* <Webcam ref={this.getVideo} /> */}\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n\nexport class PoseNetReplay extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false\n  };\n  state = {\n    loadedPoseRecords: [],\n    loadedPoseVideo: []\n  };\n\n  fileReader;\n  onChange = this.onChange.bind(this);\n  loadData = this.loadData.bind(this);\n  handleFileRead = this.handleFileRead.bind(this);\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  drawPose(range) {\n    const { videoWidth, videoHeight } = this.props;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n\n    this.poseDrawFrame(ctx, range);\n  }\n\n  poseDrawFrame(ctx, range) {\n    const {\n      minPoseConfidence,\n      minPartConfidence,\n      videoWidth,\n      videoHeight,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      showVideo,\n      flipped\n    } = this.props;\n\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    const poseDetectionFrameInner = async () => {\n      const drawPoses = () => {\n        // For each pose (i.e. person) detected in an image, loop through the poses\n        // and draw the resulting skeleton and keypoints if over certain confidence\n        // scores\n        poses.map(({ score, keypoints }, i) => {\n          if (score >= minPoseConfidence) {\n            if (showPoints) {\n              drawKeypoints(keypoints, minPartConfidence, clrList[i], ctx);\n            }\n            if (showSkeleton) {\n              drawSkeleton(\n                keypoints,\n                minPartConfidence,\n                clrList[i],\n                skeletonLineWidth,\n                ctx\n              );\n            }\n          }\n        });\n      };\n\n      let poses = [];\n      poses = range ? poseRecords.slice(range.min, range.max) : poseRecords;\n\n      let video = [];\n\n      if (range) {\n        poses = poseRecords.slice(range.min, range.max);\n\n        if (poseVideo) {\n          video = poseVideo.slice(range.min, range.max);\n        }\n      } else {\n        poses = poseRecords;\n\n        if (poseVideo) {\n          video = poseVideo;\n        }\n      }\n      video = video[video.length - 1];\n\n      const clrRange = poses.length;\n      let clr = colourNameToHex(skeletonColor) || \"#cccccc\";\n\n      const clrList = getColorOpacityRangeHex(clrRange, clr);\n      clrList.reverse()[0] = \"#fff\";\n      clrList.reverse();\n\n      if (showVideo && poseVideo.length > 1 && poses.length > 1) {\n        // turn blob into data\n        const frame = document.createElement(\"img\");\n        const url = URL.createObjectURL(video);\n\n        frame.src = url;\n\n        // temp draw\n        // frame.id = \"frame\";\n        // frame.height = 300;\n        // document.getElementById(\"frame\").replaceWith(frame);\n\n        frame.onload = () => {\n          // why? : https://stackoverflow.com/questions/12387310/html5-drawimage-works-in-firefox-not-chrome\n\n          ctx.clearRect(0, 0, videoWidth, videoHeight);\n          // draw\n          ctx.save();\n          if (flipped) {\n            // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n            ctx.scale(-1, 1);\n            ctx.translate(-videoWidth, 0);\n          }\n          ctx.drawImage(frame, 0, 0, videoWidth, videoHeight);\n          ctx.restore();\n\n          drawPoses();\n\n          URL.revokeObjectURL(url);\n        };\n      } else {\n        // no video\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n        drawPoses();\n      }\n    };\n\n    requestAnimationFrame(poseDetectionFrameInner);\n  }\n\n  componentDidMount() {\n    this.drawPose();\n  }\n\n  onChange(range) {\n    this.drawPose(range);\n  }\n\n  handleFileRead(e) {\n    const content = JSON.parse(this.fileReader.result);\n    this.setState({\n      loadedPoseRecords: content.poseRecords || content || [], // content is for backward compatibility\n      loadedPoseVideo: content.poseVideo || []\n    });\n  }\n\n  loadData(e) {\n    this.fileReader = new FileReader();\n    this.fileReader.onloadend = this.handleFileRead;\n\n    // run it\n    this.fileReader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    let { poseRecords, poseVideo } = this.props;\n\n    if (poseRecords.length === 0 && this.state.loadedPoseRecords.length > 1) {\n      poseRecords = this.state.loadedPoseRecords;\n    }\n\n    if (poseVideo.length === 0 && this.state.loadedPoseVideo.length > 1) {\n      poseVideo = this.state.loadedPoseVideo;\n    }\n\n    return (\n      <div>\n        <div\n          style={{\n            backgroundColor: \"#050517\",\n            maxWidth: 800,\n            overflow: \"hidden\"\n          }}\n        >\n          <div>\n            <canvas ref={this.getCanvas} />\n          </div>\n\n          <Scrubber onChange={this.onChange} range={poseRecords.length} />\n        </div>\n\n        {/* temporarily show image for debug */}\n        {/* <div style={{ height: 300 }}>\n          <div id=\"frame\" />\n        </div> */}\n        {poseRecords.length > 1 ? (\n          <div>\n            <div\n              className={styles.download}\n              style={{\n                maxWidth: 800,\n\n                margin: \"0 auto\",\n                display: \"flex\"\n              }}\n            >\n              <button\n                className={styles.button}\n                onClick={() =>\n                  download(\n                    JSON.stringify({\n                      poseRecords: poseRecords,\n                      poseVideo: []\n                    }),\n                    \"temp.json\"\n                  )\n                }\n              >\n                download data\n              </button>\n\n              <button\n                className={styles.button}\n                onClick={async () => {\n                  await sendEmail({\n                    subject: \"GWARA GWARA!\",\n                    message: \"I challenge you! GAWRRR!\",\n                    from: \"Rahmat Hidayat\"\n                  });\n                  alert(\"challenge sent!\");\n                }}\n              >\n                send challenge\n              </button>\n              <button\n                className={styles.button}\n                onClick={() =>\n                  this.setState({ loadedPoseRecords: [], loadedPoseVideo: [] })\n                }\n              >\n                clear data\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div\n            className={styles.download}\n            style={{ maxWidth: 800, padding: \"10px 0\", margin: \"0 auto\" }}\n          >\n            <input\n              type=\"file\"\n              name=\"pose records upload\"\n              accept=\".json\"\n              onChange={this.loadData}\n            />\n          </div>\n        )}\n\n        {DEBUG ? (\n          <div\n            style={{\n              height: \"100%\",\n              maxWidth: 800,\n              margin: \"3rem auto\",\n              textAlign: \"left\",\n              border: \"1px dashed lightgrey\",\n              padding: \"0 10px\"\n            }}\n          >\n            <ReactJson data={poseRecords} theme={googleTheme} />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport class PoseNetMatch extends Component {\n  static defaultProps = {\n    videoWidth: 600,\n    videoHeight: 500,\n    algorithm: \"single-pose\",\n    mobileNetArchitecture: isMobile() ? 0.5 : 1.01,\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    minPoseConfidence: 0.1,\n    minPartConfidence: 0.5,\n    maxPoseDetections: 2,\n    nmsRadius: 20.0,\n    outputStride: 16,\n    imageScaleFactor: 0.5,\n    skeletonColor: \"aqua\",\n    skeletonLineWidth: 2,\n    loadingText: \"Loading pose detector...\",\n    frontCamera: true,\n    stop: false,\n    record: false,\n    recordVideo: false\n  };\n\n  state = {\n    loading: true,\n    error_messages: \"\",\n    stream: null,\n    trace: [],\n    frames: [],\n    height: 0,\n    width: 0\n  };\n  traceVideo = this.traceVideo.bind(this);\n\n  tracePose(poses) {\n    if (this.props.record) {\n      this.setState({ trace: [...this.state.trace, ...poses] });\n    }\n  }\n\n  traceVideo(blob) {\n    if (this.props.record) {\n      this.setState({ frames: [...this.state.frames, blob] });\n    }\n  }\n\n  getCanvas = elem => {\n    this.canvas = elem;\n  };\n\n  getVideo = elem => {\n    this.video = elem;\n  };\n\n  onStream(v) {\n    console.log(\"streaming data\");\n    console.log(v);\n  }\n\n  setDims(h, w) {\n    this.setState({ height: h, width: w });\n  }\n\n  detectPose() {\n    const { width, height } = this.state;\n    const canvas = this.canvas;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = width;\n    canvas.height = height;\n\n    this.poseDetectionFrame(ctx);\n  }\n\n  poseDetectionFrame(ctx) {\n    const {\n      algorithm,\n      imageScaleFactor,\n      forceFlipHorizontal,\n      outputStride,\n      minPoseConfidence,\n      maxPoseDetections,\n      minPartConfidence,\n      nmsRadius,\n      videoWidth,\n      videoHeight,\n      showVideo,\n      showPoints,\n      showSkeleton,\n      skeletonColor,\n      skeletonLineWidth,\n      frontCamera,\n      stop\n    } = this.props;\n\n    const net = this.net;\n    const video = this.video;\n    const flipped = forceFlipHorizontal\n      ? forceFlipHorizontal\n      : frontCamera\n      ? true\n      : false;\n\n    const poseDetectionFrameInner = async () => {\n      let poses = [];\n\n      switch (algorithm) {\n        case \"single-pose\":\n          const pose = await net.estimateSinglePose(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride\n          );\n\n          poses.push(pose);\n          break;\n\n        case \"multi-pose\":\n          poses = await net.estimateMultiplePoses(\n            video,\n            imageScaleFactor,\n            flipped,\n            outputStride,\n            maxPoseDetections,\n            minPartConfidence,\n            nmsRadius\n          );\n\n          break;\n      }\n\n      ctx.clearRect(0, 0, videoWidth, videoHeight);\n\n      if (showVideo) {\n        ctx.save();\n        if (flipped) {\n          // https://christianheilmann.com/2013/07/19/flipping-the-image-when-accessing-the-laptop-camera-with-getusermedia/\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n        }\n        ctx.drawImage(video, 0, 0, videoWidth, videoHeight);\n        ctx.restore();\n      }\n\n      // For each pose (i.e. person) detected in an image, loop through the poses\n      // and draw the resulting skeleton and keypoints if over certain confidence\n      // scores\n      poses.forEach(({ score, keypoints }) => {\n        if (score >= minPoseConfidence) {\n          if (showPoints) {\n            drawKeypoints(keypoints, minPartConfidence, skeletonColor, ctx);\n          }\n          if (showSkeleton) {\n            drawSkeleton(\n              keypoints,\n              minPartConfidence,\n              skeletonColor,\n              skeletonLineWidth,\n              ctx\n            );\n          }\n        }\n      });\n\n      if (stop || this.state.stop || !this.camera) {\n        console.log(\"stopping function\");\n        // clear canvas\n        ctx.clearRect(0, 0, videoWidth, videoHeight);\n      } else {\n        // console.log(poses);\n\n        if (this.props.record) {\n          if (this.props.recordVideo) {\n            console.log(\"recording frame and video!\");\n          } else {\n            console.log(\"recording frames!\");\n          }\n          // trace\n          this.tracePose(poses);\n          // record video\n          this.canvas.toBlob(this.traceVideo, \"image/jpeg\", 0.4);\n\n          // stream poses to parent\n          this.getPoseRecords();\n          this.getVideoRecords();\n        }\n\n        // call next recursion\n        requestAnimationFrame(poseDetectionFrameInner);\n      }\n    };\n\n    poseDetectionFrameInner();\n  }\n\n  async onCameraStart(stream) {\n    const track = stream.getVideoTracks()[0].getSettings();\n    this.net = await posenet.load(this.props.mobileNetArchitecture);\n\n    this.setDims(track.height, track.width);\n\n    this.onStream(stream);\n    this.detectPose();\n  }\n\n  // async componentDidMount() {\n  //   console.log(\"loaded mobilenet\");\n  //   console.log(this.net);\n  // }\n\n  render() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return (\n      <div>\n        <p>match</p>\n        <p>width: {width}</p>\n        <p>height: {height}</p>\n\n        <Camera\n\n        // onCameraStart={stream => {\n        //   this.onCameraStart(stream);\n        // }}\n        />\n\n        <canvas ref={this.getCanvas} />\n      </div>\n    );\n  }\n}\n","// main imports\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\n\n// styles\nimport \"./App.css\";\nimport styles from \"./App.module.css\";\n\n// components\nimport PoseNet, { PoseNetReplay, PoseNetMatch } from \"./components/Posenet\";\n\n// constants\nimport { COLORS } from \"./lib/constants\";\n\nclass App extends Component {\n  state = {\n    recording: [],\n    videoRecording: [],\n    replay: false,\n    front: true,\n    video: true,\n    multipose: false,\n    stop: false,\n    mode: \"record\",\n    dims: {},\n    hideInfo: false\n  };\n  onToggle = this.onToggle.bind(this);\n  onToggleFrontCamera = this.onToggleFrontCamera.bind(this);\n  onToggleVideoFeed = this.onToggleVideoFeed.bind(this);\n  onTracePose = this.onTracePose.bind(this);\n  onTraceVideo = this.onTraceVideo.bind(this);\n  onToggleMultiPose = this.onToggleMultiPose.bind(this);\n  onStartRecord = this.onStartRecord.bind(this);\n  onStopRecord = this.onStopRecord.bind(this);\n\n  onToggle(e) {\n    this.setState({ replay: !this.state.replay, mode: e });\n  }\n\n  onToggleFrontCamera() {\n    this.setState({ front: !this.state.front });\n  }\n\n  onToggleVideoFeed() {\n    this.setState({ video: !this.state.video });\n  }\n\n  onToggleMultiPose() {\n    this.setState({ multipose: !this.state.multipose });\n  }\n\n  onTracePose(e) {\n    this.setState({ recording: e });\n  }\n\n  onTraceVideo(e) {\n    console.log(\"tracing video\");\n    this.setState({ videoRecording: e });\n  }\n\n  onStartRecord() {\n    this.setState({ record: true });\n  }\n\n  onStopRecord() {\n    this.setState({ record: false });\n  }\n\n  componentDidMount() {\n    this.setState({ height: window.innerHeight, width: window.innerWidth });\n    setTimeout(() => this.setState({ hideInfo: true }), 10000);\n  }\n\n  render() {\n    const ModeButtons = () => (\n      <div className={styles.modeButtons}>\n        <div className={styles.btnContainer}>\n          <button\n            className={styles.btnLeft}\n            onClick={() => this.onToggle(\"record\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length === 0 ? COLORS.secondary : \"white\",\n              color: this.state.recording.length === 0 ? \"white\" : \"black\"\n            }}\n          >\n            RECORD 📹\n          </button>\n          <button\n            className={styles.btn}\n            onClick={() => this.onToggle(\"replay\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            REPLAY ▶️\n          </button>\n          <button\n            className={styles.btnRight}\n            onClick={() => this.onToggle(\"compete\")}\n            style={{\n              padding: \"8px 15px\",\n              backgroundColor:\n                this.state.recording.length !== 0 ? COLORS.main : \"white\",\n              color: this.state.recording.length !== 0 ? \"white\" : \"black\"\n            }}\n          >\n            COMPETE ⚔️\n          </button>\n        </div>\n      </div>\n    );\n\n    const MainContent = (\n      <>\n        <div\n          className={styles.contentDiv}\n          style={{ display: this.state.mode === \"replay\" ? \"block\" : \"none\" }}\n        >\n          <PoseNetReplay\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n            showVideo={true}\n          />\n        </div>\n        {this.state.mode === \"record\" ? (\n          <PoseNet\n            videoWidth={this.state.width}\n            videoHeight={this.state.height}\n            //mobileNetArchitecture={1.01}\n            outputStride={16}\n            loadingText={\"Loading...\"}\n            frontCamera={this.state.front}\n            getPoseRecords={this.onTracePose}\n            getVideoRecords={this.onTraceVideo}\n            showVideo={this.state.video}\n            algorithm={this.state.multipose ? \"multi-pose\" : \"single-pose\"}\n            record={this.state.record}\n            recordVideo\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.mode === \"compete\" ? (\n          <PoseNetMatch\n            poseRecords={this.state.recording}\n            poseVideo={this.state.videoRecording}\n          />\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n\n    const RecordToggles = (\n      <div\n        className={styles.toggles}\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        }}\n      >\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleFrontCamera}\n        >\n          {this.state.front ? \"front\" : \"rear\"} camera\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleVideoFeed}\n        >\n          video {this.state.video ? \"on\" : \"off\"}\n        </button>\n        <button\n          className={styles.toggleButton}\n          onClick={this.onToggleMultiPose}\n        >\n          {this.state.multipose ? \"multi-\" : \"single \"}pose\n        </button>\n        <button className={styles.toggleButton} onClick={this.onStartRecord}>\n          start recording\n        </button>\n        <button\n          className={styles.toggleButtonRight}\n          onClick={this.onStopRecord}\n        >\n          stop recording\n        </button>\n      </div>\n    );\n\n    const InfoWarning = (\n      <div\n        style={{ display: this.state.hideInfo ? \"none\" : \"initial\" }}\n        className={styles.warning}\n      >\n        <code\n          style={{\n            fontSize: 10,\n            color: \"grey\"\n          }}\n        >\n          * video toggle and single/multipose toggles don't seem to work while\n          camera is already running. please toggle between cameras to make it\n          work.\n        </code>\n      </div>\n    );\n\n    const isRecordingEmpty = this.state.recording.length === 0;\n\n    return (\n      <div className={styles.app}>\n        <div>\n          <div\n            className={styles.frames}\n            style={{ color: isRecordingEmpty ? \"red\" : \"black\" }}\n          >\n            <code>recorded frames: {this.state.recording.length}</code>\n          </div>\n\n          <div\n            style={{\n              display: this.state.mode === \"record\" ? \"flex\" : \"none\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            {RecordToggles}\n            {InfoWarning}\n          </div>\n        </div>\n\n        {MainContent}\n        <ModeButtons />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2q9x4\",\"contentDiv\":\"App_contentDiv__2hIum\",\"modeButtons\":\"App_modeButtons__3SEgr\",\"frames\":\"App_frames__vi845\",\"warning\":\"App_warning__1RHk8\",\"toggles\":\"App_toggles__1x73w\",\"toggleButton\":\"App_toggleButton__2MXSU\",\"toggleButtonRight\":\"App_toggleButtonRight__2MklE App_toggleButton__2MXSU\",\"btnContainer\":\"App_btnContainer__3AbS2\",\"btn\":\"App_btn__-YolR\",\"btnLeft\":\"App_btnLeft__1pgwK App_btn__-YolR\",\"btnRight\":\"App_btnRight__2vLku App_btn__-YolR\"};"],"sourceRoot":""}